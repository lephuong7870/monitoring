{
  "permissions": {
    "canRead": true,
    "canWrite": true
  },
  "processGroupFlow": {
    "id": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
    "uri": "http://127.0.0.1:52502/nifi-api/flow/process-groups/ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
    "parentGroupId": "262a6d0b-0197-1000-2454-d9a820fccb26",
    "breadcrumb": {
      "id": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
      "permissions": {
        "canRead": true,
        "canWrite": true
      },
      "breadcrumb": {
        "id": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
        "name": "test "
      },
      "parentBreadcrumb": {
        "id": "262a6d0b-0197-1000-2454-d9a820fccb26",
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "breadcrumb": {
          "id": "262a6d0b-0197-1000-2454-d9a820fccb26",
          "name": "NiFi Flow"
        }
      }
    },
    "flow": {
      "processGroups": [],
      "remoteProcessGroups": [],
      "processors": [
        {
          "revision": {
            "version": 1
          },
          "id": "36ef3285-daf0-304b-b60e-189446e591e5",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/36ef3285-daf0-304b-b60e-189446e591e5",
          "position": {
            "x": 3820.63432113286,
            "y": -93.0047843675762
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "36ef3285-daf0-304b-b60e-189446e591e5",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 3820.63432113286,
              "y": -93.0047843675762
            },
            "name": "ConsumeKafka_2_0",
            "type": "org.apache.nifi.processors.kafka.pubsub.ConsumeKafka_2_0",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-kafka-2-0-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "success",
                "description": "FlowFiles received from Kafka. Depending on demarcation strategy it is a flow file per message or a bundle of messages grouped by topic and partition.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "bootstrap.servers": "localhost:9091",
                "security.protocol": "PLAINTEXT",
                "sasl.mechanism": "GSSAPI",
                "sasl.kerberos.service.name": null,
                "kerberos-credentials-service": null,
                "sasl.kerberos.principal": null,
                "sasl.kerberos.keytab": null,
                "sasl.username": null,
                "sasl.password": null,
                "sasl.token.auth": "false",
                "ssl.context.service": null,
                "topic": "consumer_data1",
                "topic_type": "names",
                "honor-transactions": "true",
                "group.id": "test1",
                "auto.offset.reset": "latest",
                "key-attribute-encoding": "utf-8",
                "message-demarcator": null,
                "separate-by-key": "false",
                "message-header-encoding": "UTF-8",
                "header-name-regex": null,
                "max.poll.records": "10000",
                "max-uncommit-offset-wait": "1 secs",
                "Communications Timeout": "60 secs"
              },
              "descriptors": {
                "bootstrap.servers": {
                  "name": "bootstrap.servers",
                  "displayName": "Kafka Brokers",
                  "description": "A comma-separated list of known Kafka Brokers in the format \u003Chost\u003E:\u003Cport\u003E",
                  "defaultValue": "localhost:9092",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "security.protocol": {
                  "name": "security.protocol",
                  "displayName": "Security Protocol",
                  "description": "Protocol used to communicate with brokers. Corresponds to Kafka's 'security.protocol' property.",
                  "defaultValue": "PLAINTEXT",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "PLAINTEXT",
                        "value": "PLAINTEXT",
                        "description": "PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SSL",
                        "value": "SSL",
                        "description": "SSL"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_PLAINTEXT",
                        "value": "SASL_PLAINTEXT",
                        "description": "SASL_PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_SSL",
                        "value": "SASL_SSL",
                        "description": "SASL_SSL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.mechanism": {
                  "name": "sasl.mechanism",
                  "displayName": "SASL Mechanism",
                  "description": "The SASL mechanism to use for authentication. Corresponds to Kafka's 'sasl.mechanism' property.",
                  "defaultValue": "GSSAPI",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "GSSAPI",
                        "value": "GSSAPI",
                        "description": "The mechanism for authentication via Kerberos. The principal and keytab must be provided to the processor by using a Keytab Credential service, or by specifying the properties directly in the processor."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "PLAIN",
                        "value": "PLAIN",
                        "description": "The mechanism for authentication via username and password. The username and password properties must be populated when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-256",
                        "value": "SCRAM-SHA-256",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-256. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-512",
                        "value": "SCRAM-SHA-512",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-512. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.kerberos.service.name": {
                  "name": "sasl.kerberos.service.name",
                  "displayName": "Kerberos Service Name",
                  "description": "The service name that matches the primary name of the Kafka server configured in the broker JAAS file.This can be defined either in Kafka's JAAS config or in Kafka's config. Corresponds to Kafka's 'security.protocol' property.It is ignored unless one of the SASL options of the \u003CSecurity Protocol\u003E are selected.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "kerberos-credentials-service": {
                  "name": "kerberos-credentials-service",
                  "displayName": "Kerberos Credentials Service",
                  "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "sasl.kerberos.principal": {
                  "name": "sasl.kerberos.principal",
                  "displayName": "Kerberos Principal",
                  "description": "The Kerberos principal that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.kerberos.keytab": {
                  "name": "sasl.kerberos.keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "The Kerberos keytab that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.username": {
                  "name": "sasl.username",
                  "displayName": "Username",
                  "description": "The username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.password": {
                  "name": "sasl.password",
                  "displayName": "Password",
                  "description": "The password for the given username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.token.auth": {
                  "name": "sasl.token.auth",
                  "displayName": "Token Auth",
                  "description": "When SASL Mechanism is SCRAM-SHA-256 or SCRAM-SHA-512, this property indicates if token authentication should be used.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ssl.context.service": {
                  "name": "ssl.context.service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies the SSL Context Service to use for communicating with Kafka.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "topic": {
                  "name": "topic",
                  "displayName": "Topic Name(s)",
                  "description": "The name of the Kafka Topic(s) to pull from. More than one can be supplied if comma separated.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "topic_type": {
                  "name": "topic_type",
                  "displayName": "Topic Name Format",
                  "description": "Specifies whether the Topic(s) provided are a comma separated list of names or a single regular expression",
                  "defaultValue": "names",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "names",
                        "value": "names",
                        "description": "Topic is a full topic name or comma separated list of names"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "pattern",
                        "value": "pattern",
                        "description": "Topic is a regex using the Java Pattern syntax"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "honor-transactions": {
                  "name": "honor-transactions",
                  "displayName": "Honor Transactions",
                  "description": "Specifies whether or not NiFi should honor transactional guarantees when communicating with Kafka. If false, the Processor will use an \"isolation level\" of read_uncomitted. This means that messages will be received as soon as they are written to Kafka but will be pulled, even if the producer cancels the transactions. If this value is true, NiFi will not receive any messages for which the producer's transaction was canceled, but this can result in some latency since the consumer must wait for the producer to finish its entire transaction instead of pulling as the messages become available.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "group.id": {
                  "name": "group.id",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group. Corresponds to Kafka's 'group.id' property.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "auto.offset.reset": {
                  "name": "auto.offset.reset",
                  "displayName": "Offset Reset",
                  "description": "Allows you to manage the condition when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted). Corresponds to Kafka's 'auto.offset.reset' property.",
                  "defaultValue": "latest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "earliest",
                        "value": "earliest",
                        "description": "Automatically reset the offset to the earliest offset"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "latest",
                        "value": "latest",
                        "description": "Automatically reset the offset to the latest offset"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "none",
                        "value": "none",
                        "description": "Throw exception to the consumer if no previous offset is found for the consumer's group"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "key-attribute-encoding": {
                  "name": "key-attribute-encoding",
                  "displayName": "Key Attribute Encoding",
                  "description": "FlowFiles that are emitted have an attribute named 'kafka.key'. This property dictates how the value of the attribute should be encoded.",
                  "defaultValue": "utf-8",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "UTF-8 Encoded",
                        "value": "utf-8",
                        "description": "The key is interpreted as a UTF-8 Encoded string."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Hex Encoded",
                        "value": "hex",
                        "description": "The key is interpreted as arbitrary binary data and is encoded using hexadecimal characters with uppercase letters"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-demarcator": {
                  "name": "message-demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Since KafkaConsumer receives messages in batches, you have an option to output FlowFiles which contains all Kafka messages in a single batch for a given topic and partition and this property allows you to provide a string (interpreted as UTF-8) to use for demarcating apart multiple Kafka messages. This is an optional property and if not provided each Kafka message received will result in a single FlowFile which  time it is triggered. To enter special character such as 'new line' use CTRL+Enter or Shift+Enter depending on the OS",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "separate-by-key": {
                  "name": "separate-by-key",
                  "displayName": "Separate By Key",
                  "description": "If true, and the \u003CMessage Demarcator\u003E property is set, two messages will only be added to the same FlowFile if both of the Kafka Messages have identical keys.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-header-encoding": {
                  "name": "message-header-encoding",
                  "displayName": "Message Header Encoding",
                  "description": "Any message header that is found on a Kafka message will be added to the outbound FlowFile as an attribute. This property indicates the Character Encoding to use for deserializing the headers.",
                  "defaultValue": "UTF-8",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "header-name-regex": {
                  "name": "header-name-regex",
                  "displayName": "Headers to Add as Attributes (Regex)",
                  "description": "A Regular Expression that is matched against all message headers. Any message header whose name matches the regex will be added to the FlowFile as an Attribute. If not specified, no Header values will be added as FlowFile attributes. If two messages have a different value for the same header and that header is selected by the provided regex, then those two messages must be added to different FlowFiles. As a result, users should be cautious about using a regex like \".*\" if messages are expected to have header values that are unique per message, such as an identifier or timestamp, because it will prevent NiFi from bundling the messages together efficiently.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max.poll.records": {
                  "name": "max.poll.records",
                  "displayName": "Max Poll Records",
                  "description": "Specifies the maximum number of records Kafka should return in a single poll.",
                  "defaultValue": "10000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max-uncommit-offset-wait": {
                  "name": "max-uncommit-offset-wait",
                  "displayName": "Max Uncommitted Time",
                  "description": "Specifies the maximum amount of time allowed to pass before offsets must be committed. This value impacts how often offsets will be committed.  Committing offsets less often increases throughput but also increases the window of potential data duplication in the event of a rebalance or JVM restart between commits.  This value is also related to maximum poll records and the use of a message demarcator.  When using a message demarcator we can have far more uncommitted messages than when we're not as there is much less for us to keep track of in memory.",
                  "defaultValue": "1 secs",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Communications Timeout": {
                  "name": "Communications Timeout",
                  "displayName": "Communications Timeout",
                  "description": "Specifies the timeout that the consumer should use when communicating with the Kafka Broker",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "36ef3285-daf0-304b-b60e-189446e591e5",
            "name": "ConsumeKafka_2_0",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "36ef3285-daf0-304b-b60e-189446e591e5",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ConsumeKafka_2_0",
              "type": "ConsumeKafka_2_0",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 297,
              "tasksDurationNanos": 3051893294,
              "tasks": "297",
              "tasksDuration": "00:00:03.051",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "ec28c6af-9cce-3211-8215-1877de1ada68",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/ec28c6af-9cce-3211-8215-1877de1ada68",
          "position": {
            "x": 1744,
            "y": 176
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [
            {
              "id": 1126,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "timestamp": "13:19:54 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1126,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=ec28c6af-9cce-3211-8215-1877de1ada68] Routing to Failure due to exception: Failed to connect to /127.0.0.1:43434: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:43434",
                "timestamp": "13:19:54 UTC"
              }
            },
            {
              "id": 1108,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "timestamp": "13:18:32 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1108,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=ec28c6af-9cce-3211-8215-1877de1ada68] Routing to Failure due to exception: Failed to connect to /127.0.0.1:43434: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:43434",
                "timestamp": "13:18:32 UTC"
              }
            },
            {
              "id": 1089,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "timestamp": "13:17:10 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1089,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=ec28c6af-9cce-3211-8215-1877de1ada68] Routing to Failure due to exception: Failed to connect to /127.0.0.1:43434: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:43434",
                "timestamp": "13:17:10 UTC"
              }
            },
            {
              "id": 1069,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "timestamp": "13:15:48 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1069,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=ec28c6af-9cce-3211-8215-1877de1ada68] Routing to Failure due to exception: Failed to connect to /127.0.0.1:43434: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:43434",
                "timestamp": "13:15:48 UTC"
              }
            }
          ],
          "component": {
            "id": "ec28c6af-9cce-3211-8215-1877de1ada68",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 1744,
              "y": 176
            },
            "name": "InvokeHTTP",
            "type": "org.apache.nifi.processors.standard.InvokeHTTP",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "Failure",
                "description": "The original FlowFile will be routed on any type of connection failure, timeout or general exception. It will have new attributes detailing the request.",
                "autoTerminate": false
              },
              {
                "name": "No Retry",
                "description": "The original FlowFile will be routed on any status code that should NOT be retried (1xx, 3xx, 4xx status codes).  It will have new attributes detailing the request.",
                "autoTerminate": false
              },
              {
                "name": "Original",
                "description": "The original FlowFile will be routed upon success (2xx status codes). It will have new attributes detailing the success of the request.",
                "autoTerminate": true
              },
              {
                "name": "Response",
                "description": "A Response FlowFile will be routed upon success (2xx status codes). If the 'Output Response Regardless' property is true then the response will be sent to this relationship regardless of the status code received.",
                "autoTerminate": false
              },
              {
                "name": "Retry",
                "description": "The original FlowFile will be routed on any status code that can be retried (5xx status codes). It will have new attributes detailing the request.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_ALLOWED",
            "config": {
              "properties": {
                "HTTP Method": "GET",
                "Remote URL": "http://127.0.0.1:43434",
                "SSL Context Service": null,
                "Connection Timeout": "5 secs",
                "Read Timeout": "15 secs",
                "idle-timeout": "5 mins",
                "max-idle-connections": "5",
                "Include Date Header": "True",
                "Follow Redirects": "True",
                "disable-http2": "False",
                "Attributes to Send": null,
                "Useragent": null,
                "Basic Authentication Username": null,
                "Basic Authentication Password": null,
                "proxy-configuration-service": null,
                "Proxy Host": null,
                "Proxy Port": null,
                "Proxy Type": "http",
                "invokehttp-proxy-user": null,
                "invokehttp-proxy-password": null,
                "Put Response Body In Attribute": null,
                "Max Length To Put In Attribute": "256",
                "Digest Authentication": "false",
                "Always Output Response": "false",
                "Add Response Headers to Request": "false",
                "Content-Type": "${mime.type}",
                "send-message-body": "true",
                "Use Chunked Encoding": "false",
                "Penalize on \"No Retry\"": "false",
                "use-etag": "false",
                "etag-max-cache-size": "10MB",
                "ignore-response-content": "false",
                "form-body-form-name": null,
                "set-form-filename": "true"
              },
              "descriptors": {
                "HTTP Method": {
                  "name": "HTTP Method",
                  "displayName": "HTTP Method",
                  "description": "HTTP request method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS). Arbitrary methods are also supported. Methods other than POST, PUT and PATCH will be sent without a message body.",
                  "defaultValue": "GET",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Remote URL": {
                  "name": "Remote URL",
                  "displayName": "Remote URL",
                  "description": "Remote URL which will be connected to, including scheme, host, port, path.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "The SSL Context Service used to provide client certificate information for TLS/SSL (https) connections. It is also used to connect to HTTPS Proxy.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Max wait time for connection to remote service.",
                  "defaultValue": "5 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Read Timeout": {
                  "name": "Read Timeout",
                  "displayName": "Read Timeout",
                  "description": "Max wait time for response from remote service.",
                  "defaultValue": "15 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "idle-timeout": {
                  "name": "idle-timeout",
                  "displayName": "Idle Timeout",
                  "description": "Max idle time before closing connection to the remote service.",
                  "defaultValue": "5 mins",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max-idle-connections": {
                  "name": "max-idle-connections",
                  "displayName": "Max Idle Connections",
                  "description": "Max number of idle connections to keep open.",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Include Date Header": {
                  "name": "Include Date Header",
                  "displayName": "Include Date Header",
                  "description": "Include an RFC-2616 Date header in the request.",
                  "defaultValue": "True",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "True",
                        "value": "True"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "False",
                        "value": "False"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Follow Redirects": {
                  "name": "Follow Redirects",
                  "displayName": "Follow Redirects",
                  "description": "Follow HTTP redirects issued by remote server.",
                  "defaultValue": "True",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "True",
                        "value": "True"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "False",
                        "value": "False"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "disable-http2": {
                  "name": "disable-http2",
                  "displayName": "Disable HTTP/2",
                  "description": "Determines whether or not to disable use of the HTTP/2 protocol version. If disabled, only HTTP/1.1 is supported.",
                  "defaultValue": "False",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "True",
                        "value": "True"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "False",
                        "value": "False"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Attributes to Send": {
                  "name": "Attributes to Send",
                  "displayName": "Attributes to Send",
                  "description": "Regular expression that defines which attributes to send as HTTP headers in the request. If not defined, no attributes are sent as headers. Also any dynamic properties set will be sent as headers. The dynamic property key will be the header key and the dynamic property value will be interpreted as expression language will be the header value.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Useragent": {
                  "name": "Useragent",
                  "displayName": "Useragent",
                  "description": "The Useragent identifier sent along with each request",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Basic Authentication Username": {
                  "name": "Basic Authentication Username",
                  "displayName": "Basic Authentication Username",
                  "description": "The username to be used by the client to authenticate against the Remote URL.  Cannot include control characters (0-31), ':', or DEL (127).",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Basic Authentication Password": {
                  "name": "Basic Authentication Password",
                  "displayName": "Basic Authentication Password",
                  "description": "The password to be used by the client to authenticate against the Remote URL.",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "proxy-configuration-service": {
                  "name": "proxy-configuration-service",
                  "displayName": "Proxy Configuration Service",
                  "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: SOCKS, HTTP + AuthN",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "The fully qualified hostname or IP address of the proxy server",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "Proxy Port": {
                  "name": "Proxy Port",
                  "displayName": "Proxy Port",
                  "description": "The port of the proxy server",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "Proxy Type": {
                  "name": "Proxy Type",
                  "displayName": "Proxy Type",
                  "description": "The type of the proxy we are connecting to. Must be either http or https",
                  "defaultValue": "http",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "invokehttp-proxy-user": {
                  "name": "invokehttp-proxy-user",
                  "displayName": "Proxy Username",
                  "description": "Username to set when authenticating against proxy",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "invokehttp-proxy-password": {
                  "name": "invokehttp-proxy-password",
                  "displayName": "Proxy Password",
                  "description": "Password to set when authenticating against proxy",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "Put Response Body In Attribute": {
                  "name": "Put Response Body In Attribute",
                  "displayName": "Put Response Body In Attribute",
                  "description": "If set, the response body received back will be put into an attribute of the original FlowFile instead of a separate FlowFile. The attribute key to put to is determined by evaluating value of this property. ",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Max Length To Put In Attribute": {
                  "name": "Max Length To Put In Attribute",
                  "displayName": "Max Length To Put In Attribute",
                  "description": "If routing the response body to an attribute of the original (by setting the \"Put response body in attribute\" property or by receiving an error status code), the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will be truncated to fit. Consider making this smaller if able.",
                  "defaultValue": "256",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Digest Authentication": {
                  "name": "Digest Authentication",
                  "displayName": "Use Digest Authentication",
                  "description": "Whether to communicate with the website using Digest Authentication. 'Basic Authentication Username' and 'Basic Authentication Password' are used for authentication.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Always Output Response": {
                  "name": "Always Output Response",
                  "displayName": "Always Output Response",
                  "description": "Will force a response FlowFile to be generated and routed to the 'Response' relationship regardless of what the server status code received is or if the processor is configured to put the server response body in the request attribute. In the later configuration a request FlowFile with the response body in the attribute and a typical response FlowFile will be emitted to their respective relationships.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Add Response Headers to Request": {
                  "name": "Add Response Headers to Request",
                  "displayName": "Add Response Headers to Request",
                  "description": "Enabling this property saves all the response headers to the original request. This may be when the response headers are needed but a response is not generated due to the status code received.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Content-Type": {
                  "name": "Content-Type",
                  "displayName": "Content-Type",
                  "description": "The Content-Type to specify for when content is being transmitted through a PUT, POST or PATCH. In the case of an empty value after evaluating an expression language expression, Content-Type defaults to application/octet-stream",
                  "defaultValue": "${mime.type}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "send-message-body": {
                  "name": "send-message-body",
                  "displayName": "Send Message Body",
                  "description": "If true, sends the HTTP message body on POST/PUT/PATCH requests (default).  If false, suppresses the message body and content-type header for these requests.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Use Chunked Encoding": {
                  "name": "Use Chunked Encoding",
                  "displayName": "Use Chunked Encoding",
                  "description": "When POST'ing, PUT'ing or PATCH'ing content set this property to true in order to not pass the 'Content-length' header and instead send 'Transfer-Encoding' with a value of 'chunked'. This will enable the data transfer mechanism which was introduced in HTTP 1.1 to pass data of unknown lengths in chunks.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Penalize on \"No Retry\"": {
                  "name": "Penalize on \"No Retry\"",
                  "displayName": "Penalize on \"No Retry\"",
                  "description": "Enabling this property will penalize FlowFiles that are routed to the \"No Retry\" relationship.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "use-etag": {
                  "name": "use-etag",
                  "displayName": "Use HTTP ETag",
                  "description": "Enable HTTP entity tag (ETag) support for HTTP requests.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "etag-max-cache-size": {
                  "name": "etag-max-cache-size",
                  "displayName": "Maximum ETag Cache Size",
                  "description": "The maximum size that the ETag cache should be allowed to grow to. The default size is 10MB.",
                  "defaultValue": "10MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ignore-response-content": {
                  "name": "ignore-response-content",
                  "displayName": "Ignore response's content",
                  "description": "If true, the processor will not write the response's content into the flow file.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "form-body-form-name": {
                  "name": "form-body-form-name",
                  "displayName": "FlowFile Form Data Name",
                  "description": "When Send Message Body is true, and FlowFile Form Data Name is set,  the FlowFile will be sent as the message body in multipart/form format with this value as the form data name.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "set-form-filename": {
                  "name": "set-form-filename",
                  "displayName": "Set FlowFile Form Data File Name",
                  "description": "When Send Message Body is true, FlowFile Form Data Name is set, and Set FlowFile Form Data File Name is true, the FlowFile's fileName value will be set as the filename property of the form data.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_ALLOWED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "ec28c6af-9cce-3211-8215-1877de1ada68",
            "name": "InvokeHTTP",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "type": "InvokeHTTP",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 4,
              "bytesOut": 64,
              "output": "4 (64 bytes)",
              "taskCount": 4,
              "tasksDurationNanos": 19011308,
              "tasks": "4",
              "tasksDuration": "00:00:00.019",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "clientId": "22bb31d6-16e9-1bf8-a16b-2255b9befdc1",
            "version": 5
          },
          "id": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
          "position": {
            "x": 3712,
            "y": 424
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [
            {
              "id": 1130,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "timestamp": "13:20:06 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1130,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:20:06 UTC"
              }
            },
            {
              "id": 1128,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "timestamp": "13:19:55 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1128,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:19:55 UTC"
              }
            },
            {
              "id": 1124,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "timestamp": "13:19:44 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1124,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:19:44 UTC"
              }
            },
            {
              "id": 1122,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "timestamp": "13:19:33 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1122,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:19:33 UTC"
              }
            },
            {
              "id": 1120,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "timestamp": "13:19:22 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1120,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:19:22 UTC"
              }
            }
          ],
          "component": {
            "id": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 3712,
              "y": 424
            },
            "name": "PublishKafka_2_0",
            "type": "org.apache.nifi.processors.kafka.pubsub.PublishKafka_2_0",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-kafka-2-0-nar",
              "version": "1.14.0"
            },
            "state": "STOPPED",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "Any FlowFile that cannot be sent to Kafka will be routed to this Relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles for which all content was sent to Kafka.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "bootstrap.servers": "localhost:1123",
                "security.protocol": "PLAINTEXT",
                "sasl.mechanism": "GSSAPI",
                "sasl.kerberos.service.name": null,
                "kerberos-credentials-service": null,
                "sasl.kerberos.principal": null,
                "sasl.kerberos.keytab": null,
                "sasl.username": null,
                "sasl.password": null,
                "sasl.token.auth": "false",
                "ssl.context.service": null,
                "topic": "11data_pushKafka",
                "acks": "all",
                "Failure Strategy": "Route to Failure",
                "use-transactions": "true",
                "transactional-id-prefix": null,
                "attribute-name-regex": null,
                "message-header-encoding": "UTF-8",
                "kafka-key": null,
                "key-attribute-encoding": "utf-8",
                "message-demarcator": null,
                "max.request.size": "1 MB",
                "ack.wait.time": "5 secs",
                "max.block.ms": "5 sec",
                "partitioner.class": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                "partition": null,
                "compression.type": "none"
              },
              "descriptors": {
                "bootstrap.servers": {
                  "name": "bootstrap.servers",
                  "displayName": "Kafka Brokers",
                  "description": "A comma-separated list of known Kafka Brokers in the format \u003Chost\u003E:\u003Cport\u003E",
                  "defaultValue": "localhost:9092",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "security.protocol": {
                  "name": "security.protocol",
                  "displayName": "Security Protocol",
                  "description": "Protocol used to communicate with brokers. Corresponds to Kafka's 'security.protocol' property.",
                  "defaultValue": "PLAINTEXT",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "PLAINTEXT",
                        "value": "PLAINTEXT",
                        "description": "PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SSL",
                        "value": "SSL",
                        "description": "SSL"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_PLAINTEXT",
                        "value": "SASL_PLAINTEXT",
                        "description": "SASL_PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_SSL",
                        "value": "SASL_SSL",
                        "description": "SASL_SSL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.mechanism": {
                  "name": "sasl.mechanism",
                  "displayName": "SASL Mechanism",
                  "description": "The SASL mechanism to use for authentication. Corresponds to Kafka's 'sasl.mechanism' property.",
                  "defaultValue": "GSSAPI",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "GSSAPI",
                        "value": "GSSAPI",
                        "description": "The mechanism for authentication via Kerberos. The principal and keytab must be provided to the processor by using a Keytab Credential service, or by specifying the properties directly in the processor."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "PLAIN",
                        "value": "PLAIN",
                        "description": "The mechanism for authentication via username and password. The username and password properties must be populated when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-256",
                        "value": "SCRAM-SHA-256",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-256. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-512",
                        "value": "SCRAM-SHA-512",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-512. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.kerberos.service.name": {
                  "name": "sasl.kerberos.service.name",
                  "displayName": "Kerberos Service Name",
                  "description": "The service name that matches the primary name of the Kafka server configured in the broker JAAS file.This can be defined either in Kafka's JAAS config or in Kafka's config. Corresponds to Kafka's 'security.protocol' property.It is ignored unless one of the SASL options of the \u003CSecurity Protocol\u003E are selected.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "kerberos-credentials-service": {
                  "name": "kerberos-credentials-service",
                  "displayName": "Kerberos Credentials Service",
                  "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "sasl.kerberos.principal": {
                  "name": "sasl.kerberos.principal",
                  "displayName": "Kerberos Principal",
                  "description": "The Kerberos principal that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.kerberos.keytab": {
                  "name": "sasl.kerberos.keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "The Kerberos keytab that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.username": {
                  "name": "sasl.username",
                  "displayName": "Username",
                  "description": "The username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.password": {
                  "name": "sasl.password",
                  "displayName": "Password",
                  "description": "The password for the given username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.token.auth": {
                  "name": "sasl.token.auth",
                  "displayName": "Token Auth",
                  "description": "When SASL Mechanism is SCRAM-SHA-256 or SCRAM-SHA-512, this property indicates if token authentication should be used.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ssl.context.service": {
                  "name": "ssl.context.service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies the SSL Context Service to use for communicating with Kafka.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "topic": {
                  "name": "topic",
                  "displayName": "Topic Name",
                  "description": "The name of the Kafka Topic to publish to.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "acks": {
                  "name": "acks",
                  "displayName": "Delivery Guarantee",
                  "description": "Specifies the requirement for guaranteeing that a message is sent to Kafka. Corresponds to Kafka's 'acks' property.",
                  "defaultValue": "0",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Best Effort",
                        "value": "0",
                        "description": "FlowFile will be routed to success after successfully writing the content to a Kafka node, without waiting for a response. This provides the best performance but may result in data loss."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Single Node Delivery",
                        "value": "1",
                        "description": "FlowFile will be routed to success if the message is received by a single Kafka node, whether or not it is replicated. This is faster than \u003CGuarantee Replicated Delivery\u003E but can result in data loss if a Kafka node crashes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Replicated Delivery",
                        "value": "all",
                        "description": "FlowFile will be routed to failure unless the message is replicated to the appropriate number of Kafka Nodes according to the Topic configuration"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Failure Strategy": {
                  "name": "Failure Strategy",
                  "displayName": "Failure Strategy",
                  "description": "Dictates how the processor handles a FlowFile if it is unable to publish the data to Kafka",
                  "defaultValue": "Route to Failure",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Failure",
                        "value": "Route to Failure",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be routed to the 'failure' relationship."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Rollback",
                        "value": "Rollback",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be placed back on the top of its queue so that it will be the next FlowFile tried again. For dataflows where ordering of FlowFiles is important, this strategy can be used along with ensuring that the each processor in the dataflow uses only a single Concurrent Task."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "use-transactions": {
                  "name": "use-transactions",
                  "displayName": "Use Transactions",
                  "description": "Specifies whether or not NiFi should provide Transactional guarantees when communicating with Kafka. If there is a problem sending data to Kafka, and this property is set to false, then the messages that have already been sent to Kafka will continue on and be delivered to consumers. If this is set to true, then the Kafka transaction will be rolled back so that those messages are not available to consumers. Setting this to true requires that the \u003CDelivery Guarantee\u003E property be set to \"Guarantee Replicated Delivery.\"",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "transactional-id-prefix": {
                  "name": "transactional-id-prefix",
                  "displayName": "Transactional Id Prefix",
                  "description": "When Use Transaction is set to true, KafkaProducer config 'transactional.id' will be a generated UUID and will be prefixed with this string.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "attribute-name-regex": {
                  "name": "attribute-name-regex",
                  "displayName": "Attributes to Send as Headers (Regex)",
                  "description": "A Regular Expression that is matched against all FlowFile attribute names. Any attribute whose name matches the regex will be added to the Kafka messages as a Header. If not specified, no FlowFile attributes will be added as headers.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-header-encoding": {
                  "name": "message-header-encoding",
                  "displayName": "Message Header Encoding",
                  "description": "For any attribute that is added as a message header, as configured via the \u003CAttributes to Send as Headers\u003E property, this property indicates the Character Encoding to use for serializing the headers.",
                  "defaultValue": "UTF-8",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "kafka-key": {
                  "name": "kafka-key",
                  "displayName": "Kafka Key",
                  "description": "The Key to use for the Message. If not specified, the flow file attribute 'kafka.key' is used as the message key, if it is present.Beware that setting Kafka key and demarcating at the same time may potentially lead to many Kafka messages with the same key.Normally this is not a problem as Kafka does not enforce or assume message and key uniqueness. Still, setting the demarcator and Kafka key at the same time poses a risk of data loss on Kafka. During a topic compaction on Kafka, messages will be deduplicated based on this key.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "key-attribute-encoding": {
                  "name": "key-attribute-encoding",
                  "displayName": "Key Attribute Encoding",
                  "description": "FlowFiles that are emitted have an attribute named 'kafka.key'. This property dictates how the value of the attribute should be encoded.",
                  "defaultValue": "utf-8",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "UTF-8 Encoded",
                        "value": "utf-8",
                        "description": "The key is interpreted as a UTF-8 Encoded string."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Hex Encoded",
                        "value": "hex",
                        "description": "The key is interpreted as arbitrary binary data that is encoded using hexadecimal characters with uppercase letters."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-demarcator": {
                  "name": "message-demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the string (interpreted as UTF-8) to use for demarcating multiple messages within a single FlowFile. If not specified, the entire content of the FlowFile will be used as a single message. If specified, the contents of the FlowFile will be split on this delimiter and each section sent as a separate Kafka message. To enter special character such as 'new line' use CTRL+Enter or Shift+Enter, depending on your OS.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "max.request.size": {
                  "name": "max.request.size",
                  "displayName": "Max Request Size",
                  "description": "The maximum size of a request in bytes. Corresponds to Kafka's 'max.request.size' property and defaults to 1 MB (1048576).",
                  "defaultValue": "1 MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ack.wait.time": {
                  "name": "ack.wait.time",
                  "displayName": "Acknowledgment Wait Time",
                  "description": "After sending a message to Kafka, this indicates the amount of time that we are willing to wait for a response from Kafka. If Kafka does not acknowledge the message within this time period, the FlowFile will be routed to 'failure'.",
                  "defaultValue": "5 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max.block.ms": {
                  "name": "max.block.ms",
                  "displayName": "Max Metadata Wait Time",
                  "description": "The amount of time publisher will wait to obtain metadata or wait for the buffer to flush during the 'send' call before failing the entire 'send' call. Corresponds to Kafka's 'max.block.ms' property",
                  "defaultValue": "5 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "partitioner.class": {
                  "name": "partitioner.class",
                  "displayName": "Partitioner class",
                  "description": "Specifies which class to use to compute a partition id for a message. Corresponds to Kafka's 'partitioner.class' property.",
                  "defaultValue": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "RoundRobinPartitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$RoundRobinPartitioner",
                        "description": "Messages will be assigned partitions in a round-robin fashion, sending the first message to Partition 1, the next Partition to Partition 2, and so on, wrapping as necessary."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DefaultPartitioner",
                        "value": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                        "description": "Messages will be assigned to random partitions."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Expression Language Partitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$ExpressionLanguagePartitioner",
                        "description": "Interprets the \u003CPartition\u003E property as Expression Language that will be evaluated against each FlowFile. This Expression will be evaluated once against the FlowFile, so all Records in a given FlowFile will go to the same partition."
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "partition": {
                  "name": "partition",
                  "displayName": "Partition",
                  "description": "Specifies which Partition Records will go to.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "compression.type": {
                  "name": "compression.type",
                  "displayName": "Compression Type",
                  "description": "This parameter allows you to specify the compression codec for all data generated by this producer.",
                  "defaultValue": "none",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "none",
                        "value": "none"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "gzip",
                        "value": "gzip"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "snappy",
                        "value": "snappy"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "lz4",
                        "value": "lz4"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
            "name": "PublishKafka_2_0",
            "runStatus": "Stopped",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "type": "PublishKafka_2_0",
              "runStatus": "Stopped",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 25,
              "tasksDurationNanos": 250796462341,
              "tasks": "25",
              "tasksDuration": "00:04:10.796",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "a9cd91d1-db01-34bd-a27f-6398c004caa9",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/a9cd91d1-db01-34bd-a27f-6398c004caa9",
          "position": {
            "x": 4320,
            "y": 8
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a9cd91d1-db01-34bd-a27f-6398c004caa9",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 4320,
              "y": 8
            },
            "name": "ConsumeKafka_2_0",
            "type": "org.apache.nifi.processors.kafka.pubsub.ConsumeKafka_2_0",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-kafka-2-0-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "success",
                "description": "FlowFiles received from Kafka. Depending on demarcation strategy it is a flow file per message or a bundle of messages grouped by topic and partition.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "bootstrap.servers": "localhost:9094",
                "security.protocol": "PLAINTEXT",
                "sasl.mechanism": "GSSAPI",
                "sasl.kerberos.service.name": null,
                "kerberos-credentials-service": null,
                "sasl.kerberos.principal": null,
                "sasl.kerberos.keytab": null,
                "sasl.username": null,
                "sasl.password": null,
                "sasl.token.auth": "false",
                "ssl.context.service": null,
                "topic": "consumer_data2",
                "topic_type": "names",
                "honor-transactions": "true",
                "group.id": "test2",
                "auto.offset.reset": "latest",
                "key-attribute-encoding": "utf-8",
                "message-demarcator": null,
                "separate-by-key": "false",
                "message-header-encoding": "UTF-8",
                "header-name-regex": null,
                "max.poll.records": "10000",
                "max-uncommit-offset-wait": "1 secs",
                "Communications Timeout": "60 secs"
              },
              "descriptors": {
                "bootstrap.servers": {
                  "name": "bootstrap.servers",
                  "displayName": "Kafka Brokers",
                  "description": "A comma-separated list of known Kafka Brokers in the format \u003Chost\u003E:\u003Cport\u003E",
                  "defaultValue": "localhost:9092",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "security.protocol": {
                  "name": "security.protocol",
                  "displayName": "Security Protocol",
                  "description": "Protocol used to communicate with brokers. Corresponds to Kafka's 'security.protocol' property.",
                  "defaultValue": "PLAINTEXT",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "PLAINTEXT",
                        "value": "PLAINTEXT",
                        "description": "PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SSL",
                        "value": "SSL",
                        "description": "SSL"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_PLAINTEXT",
                        "value": "SASL_PLAINTEXT",
                        "description": "SASL_PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_SSL",
                        "value": "SASL_SSL",
                        "description": "SASL_SSL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.mechanism": {
                  "name": "sasl.mechanism",
                  "displayName": "SASL Mechanism",
                  "description": "The SASL mechanism to use for authentication. Corresponds to Kafka's 'sasl.mechanism' property.",
                  "defaultValue": "GSSAPI",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "GSSAPI",
                        "value": "GSSAPI",
                        "description": "The mechanism for authentication via Kerberos. The principal and keytab must be provided to the processor by using a Keytab Credential service, or by specifying the properties directly in the processor."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "PLAIN",
                        "value": "PLAIN",
                        "description": "The mechanism for authentication via username and password. The username and password properties must be populated when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-256",
                        "value": "SCRAM-SHA-256",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-256. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-512",
                        "value": "SCRAM-SHA-512",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-512. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.kerberos.service.name": {
                  "name": "sasl.kerberos.service.name",
                  "displayName": "Kerberos Service Name",
                  "description": "The service name that matches the primary name of the Kafka server configured in the broker JAAS file.This can be defined either in Kafka's JAAS config or in Kafka's config. Corresponds to Kafka's 'security.protocol' property.It is ignored unless one of the SASL options of the \u003CSecurity Protocol\u003E are selected.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "kerberos-credentials-service": {
                  "name": "kerberos-credentials-service",
                  "displayName": "Kerberos Credentials Service",
                  "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "sasl.kerberos.principal": {
                  "name": "sasl.kerberos.principal",
                  "displayName": "Kerberos Principal",
                  "description": "The Kerberos principal that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.kerberos.keytab": {
                  "name": "sasl.kerberos.keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "The Kerberos keytab that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.username": {
                  "name": "sasl.username",
                  "displayName": "Username",
                  "description": "The username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.password": {
                  "name": "sasl.password",
                  "displayName": "Password",
                  "description": "The password for the given username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.token.auth": {
                  "name": "sasl.token.auth",
                  "displayName": "Token Auth",
                  "description": "When SASL Mechanism is SCRAM-SHA-256 or SCRAM-SHA-512, this property indicates if token authentication should be used.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ssl.context.service": {
                  "name": "ssl.context.service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies the SSL Context Service to use for communicating with Kafka.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "topic": {
                  "name": "topic",
                  "displayName": "Topic Name(s)",
                  "description": "The name of the Kafka Topic(s) to pull from. More than one can be supplied if comma separated.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "topic_type": {
                  "name": "topic_type",
                  "displayName": "Topic Name Format",
                  "description": "Specifies whether the Topic(s) provided are a comma separated list of names or a single regular expression",
                  "defaultValue": "names",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "names",
                        "value": "names",
                        "description": "Topic is a full topic name or comma separated list of names"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "pattern",
                        "value": "pattern",
                        "description": "Topic is a regex using the Java Pattern syntax"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "honor-transactions": {
                  "name": "honor-transactions",
                  "displayName": "Honor Transactions",
                  "description": "Specifies whether or not NiFi should honor transactional guarantees when communicating with Kafka. If false, the Processor will use an \"isolation level\" of read_uncomitted. This means that messages will be received as soon as they are written to Kafka but will be pulled, even if the producer cancels the transactions. If this value is true, NiFi will not receive any messages for which the producer's transaction was canceled, but this can result in some latency since the consumer must wait for the producer to finish its entire transaction instead of pulling as the messages become available.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "group.id": {
                  "name": "group.id",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group. Corresponds to Kafka's 'group.id' property.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "auto.offset.reset": {
                  "name": "auto.offset.reset",
                  "displayName": "Offset Reset",
                  "description": "Allows you to manage the condition when there is no initial offset in Kafka or if the current offset does not exist any more on the server (e.g. because that data has been deleted). Corresponds to Kafka's 'auto.offset.reset' property.",
                  "defaultValue": "latest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "earliest",
                        "value": "earliest",
                        "description": "Automatically reset the offset to the earliest offset"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "latest",
                        "value": "latest",
                        "description": "Automatically reset the offset to the latest offset"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "none",
                        "value": "none",
                        "description": "Throw exception to the consumer if no previous offset is found for the consumer's group"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "key-attribute-encoding": {
                  "name": "key-attribute-encoding",
                  "displayName": "Key Attribute Encoding",
                  "description": "FlowFiles that are emitted have an attribute named 'kafka.key'. This property dictates how the value of the attribute should be encoded.",
                  "defaultValue": "utf-8",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "UTF-8 Encoded",
                        "value": "utf-8",
                        "description": "The key is interpreted as a UTF-8 Encoded string."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Hex Encoded",
                        "value": "hex",
                        "description": "The key is interpreted as arbitrary binary data and is encoded using hexadecimal characters with uppercase letters"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-demarcator": {
                  "name": "message-demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Since KafkaConsumer receives messages in batches, you have an option to output FlowFiles which contains all Kafka messages in a single batch for a given topic and partition and this property allows you to provide a string (interpreted as UTF-8) to use for demarcating apart multiple Kafka messages. This is an optional property and if not provided each Kafka message received will result in a single FlowFile which  time it is triggered. To enter special character such as 'new line' use CTRL+Enter or Shift+Enter depending on the OS",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "separate-by-key": {
                  "name": "separate-by-key",
                  "displayName": "Separate By Key",
                  "description": "If true, and the \u003CMessage Demarcator\u003E property is set, two messages will only be added to the same FlowFile if both of the Kafka Messages have identical keys.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-header-encoding": {
                  "name": "message-header-encoding",
                  "displayName": "Message Header Encoding",
                  "description": "Any message header that is found on a Kafka message will be added to the outbound FlowFile as an attribute. This property indicates the Character Encoding to use for deserializing the headers.",
                  "defaultValue": "UTF-8",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "header-name-regex": {
                  "name": "header-name-regex",
                  "displayName": "Headers to Add as Attributes (Regex)",
                  "description": "A Regular Expression that is matched against all message headers. Any message header whose name matches the regex will be added to the FlowFile as an Attribute. If not specified, no Header values will be added as FlowFile attributes. If two messages have a different value for the same header and that header is selected by the provided regex, then those two messages must be added to different FlowFiles. As a result, users should be cautious about using a regex like \".*\" if messages are expected to have header values that are unique per message, such as an identifier or timestamp, because it will prevent NiFi from bundling the messages together efficiently.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max.poll.records": {
                  "name": "max.poll.records",
                  "displayName": "Max Poll Records",
                  "description": "Specifies the maximum number of records Kafka should return in a single poll.",
                  "defaultValue": "10000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max-uncommit-offset-wait": {
                  "name": "max-uncommit-offset-wait",
                  "displayName": "Max Uncommitted Time",
                  "description": "Specifies the maximum amount of time allowed to pass before offsets must be committed. This value impacts how often offsets will be committed.  Committing offsets less often increases throughput but also increases the window of potential data duplication in the event of a rebalance or JVM restart between commits.  This value is also related to maximum poll records and the use of a message demarcator.  When using a message demarcator we can have far more uncommitted messages than when we're not as there is much less for us to keep track of in memory.",
                  "defaultValue": "1 secs",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Communications Timeout": {
                  "name": "Communications Timeout",
                  "displayName": "Communications Timeout",
                  "description": "Specifies the timeout that the consumer should use when communicating with the Kafka Broker",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "a9cd91d1-db01-34bd-a27f-6398c004caa9",
            "name": "ConsumeKafka_2_0",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "a9cd91d1-db01-34bd-a27f-6398c004caa9",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ConsumeKafka_2_0",
              "type": "ConsumeKafka_2_0",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 297,
              "tasksDurationNanos": 3035226460,
              "tasks": "297",
              "tasksDuration": "00:00:03.035",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/682d01b0-dffa-3d69-8416-c922cea0b5eb",
          "position": {
            "x": 1736,
            "y": -104
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 1736,
              "y": -104
            },
            "name": "GenerateFlowFile",
            "type": "org.apache.nifi.processors.standard.GenerateFlowFile",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "success",
                "description": "",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "File Size": "0B",
                "Batch Size": "1",
                "Data Format": "Text",
                "Unique FlowFiles": "false",
                "generate-ff-custom-text": "{ \"data\" : \"1\" }",
                "character-set": "UTF-8",
                "mime-type": null
              },
              "descriptors": {
                "File Size": {
                  "name": "File Size",
                  "displayName": "File Size",
                  "description": "The size of the file that will be used",
                  "defaultValue": "0B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "The number of FlowFiles to be transferred in each invocation",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Data Format": {
                  "name": "Data Format",
                  "displayName": "Data Format",
                  "description": "Specifies whether the data should be Text or Binary",
                  "defaultValue": "Text",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Binary",
                        "value": "Binary"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Unique FlowFiles": {
                  "name": "Unique FlowFiles",
                  "displayName": "Unique FlowFiles",
                  "description": "If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "generate-ff-custom-text": {
                  "name": "generate-ff-custom-text",
                  "displayName": "Custom Text",
                  "description": "If Data Format is text and if Unique FlowFiles is false, then this custom text will be used as content of the generated FlowFiles and the File Size will be ignored. Finally, if Expression Language is used, evaluation will be performed only once per batch of generated FlowFiles",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "character-set": {
                  "name": "character-set",
                  "displayName": "Character Set",
                  "description": "Specifies the character set to use when writing the bytes of Custom Text to a flow file.",
                  "defaultValue": "UTF-8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "mime-type": {
                  "name": "mime-type",
                  "displayName": "Mime Type",
                  "description": "Specifies the value to set for the \"mime.type\" attribute.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "82 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
            "name": "GenerateFlowFile",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "type": "GenerateFlowFile",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 64,
              "read": "0 bytes",
              "written": "64 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 8,
              "bytesOut": 128,
              "output": "8 (128 bytes)",
              "taskCount": 4,
              "tasksDurationNanos": 10370187,
              "tasks": "4",
              "tasksDuration": "00:00:00.010",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "clientId": "22bb31d6-16e9-1bf8-a16b-2255b9befdc1",
            "version": 3
          },
          "id": "dc3d3702-7f00-138e-982c-423e499f715a",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/dc3d3702-7f00-138e-982c-423e499f715a",
          "position": {
            "x": 4344,
            "y": 240
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "dc3d3702-7f00-138e-982c-423e499f715a",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 4344,
              "y": 240
            },
            "name": "PublishKafka_2_0",
            "type": "org.apache.nifi.processors.kafka.pubsub.PublishKafka_2_0",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-kafka-2-0-nar",
              "version": "1.14.0"
            },
            "state": "STOPPED",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "Any FlowFile that cannot be sent to Kafka will be routed to this Relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles for which all content was sent to Kafka.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "bootstrap.servers": "localhost:2332",
                "security.protocol": "PLAINTEXT",
                "sasl.mechanism": "GSSAPI",
                "sasl.kerberos.service.name": null,
                "kerberos-credentials-service": null,
                "sasl.kerberos.principal": null,
                "sasl.kerberos.keytab": null,
                "sasl.username": null,
                "sasl.password": null,
                "sasl.token.auth": "false",
                "ssl.context.service": null,
                "topic": "data_pushKafka2323",
                "acks": "all",
                "Failure Strategy": "Route to Failure",
                "use-transactions": "true",
                "transactional-id-prefix": null,
                "attribute-name-regex": null,
                "message-header-encoding": "UTF-8",
                "kafka-key": null,
                "key-attribute-encoding": "utf-8",
                "message-demarcator": null,
                "max.request.size": "1 MB",
                "ack.wait.time": "5 secs",
                "max.block.ms": "5 sec",
                "partitioner.class": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                "partition": null,
                "compression.type": "none"
              },
              "descriptors": {
                "bootstrap.servers": {
                  "name": "bootstrap.servers",
                  "displayName": "Kafka Brokers",
                  "description": "A comma-separated list of known Kafka Brokers in the format \u003Chost\u003E:\u003Cport\u003E",
                  "defaultValue": "localhost:9092",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "security.protocol": {
                  "name": "security.protocol",
                  "displayName": "Security Protocol",
                  "description": "Protocol used to communicate with brokers. Corresponds to Kafka's 'security.protocol' property.",
                  "defaultValue": "PLAINTEXT",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "PLAINTEXT",
                        "value": "PLAINTEXT",
                        "description": "PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SSL",
                        "value": "SSL",
                        "description": "SSL"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_PLAINTEXT",
                        "value": "SASL_PLAINTEXT",
                        "description": "SASL_PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_SSL",
                        "value": "SASL_SSL",
                        "description": "SASL_SSL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.mechanism": {
                  "name": "sasl.mechanism",
                  "displayName": "SASL Mechanism",
                  "description": "The SASL mechanism to use for authentication. Corresponds to Kafka's 'sasl.mechanism' property.",
                  "defaultValue": "GSSAPI",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "GSSAPI",
                        "value": "GSSAPI",
                        "description": "The mechanism for authentication via Kerberos. The principal and keytab must be provided to the processor by using a Keytab Credential service, or by specifying the properties directly in the processor."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "PLAIN",
                        "value": "PLAIN",
                        "description": "The mechanism for authentication via username and password. The username and password properties must be populated when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-256",
                        "value": "SCRAM-SHA-256",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-256. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-512",
                        "value": "SCRAM-SHA-512",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-512. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.kerberos.service.name": {
                  "name": "sasl.kerberos.service.name",
                  "displayName": "Kerberos Service Name",
                  "description": "The service name that matches the primary name of the Kafka server configured in the broker JAAS file.This can be defined either in Kafka's JAAS config or in Kafka's config. Corresponds to Kafka's 'security.protocol' property.It is ignored unless one of the SASL options of the \u003CSecurity Protocol\u003E are selected.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "kerberos-credentials-service": {
                  "name": "kerberos-credentials-service",
                  "displayName": "Kerberos Credentials Service",
                  "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "sasl.kerberos.principal": {
                  "name": "sasl.kerberos.principal",
                  "displayName": "Kerberos Principal",
                  "description": "The Kerberos principal that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.kerberos.keytab": {
                  "name": "sasl.kerberos.keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "The Kerberos keytab that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.username": {
                  "name": "sasl.username",
                  "displayName": "Username",
                  "description": "The username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.password": {
                  "name": "sasl.password",
                  "displayName": "Password",
                  "description": "The password for the given username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.token.auth": {
                  "name": "sasl.token.auth",
                  "displayName": "Token Auth",
                  "description": "When SASL Mechanism is SCRAM-SHA-256 or SCRAM-SHA-512, this property indicates if token authentication should be used.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ssl.context.service": {
                  "name": "ssl.context.service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies the SSL Context Service to use for communicating with Kafka.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "topic": {
                  "name": "topic",
                  "displayName": "Topic Name",
                  "description": "The name of the Kafka Topic to publish to.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "acks": {
                  "name": "acks",
                  "displayName": "Delivery Guarantee",
                  "description": "Specifies the requirement for guaranteeing that a message is sent to Kafka. Corresponds to Kafka's 'acks' property.",
                  "defaultValue": "0",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Best Effort",
                        "value": "0",
                        "description": "FlowFile will be routed to success after successfully writing the content to a Kafka node, without waiting for a response. This provides the best performance but may result in data loss."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Single Node Delivery",
                        "value": "1",
                        "description": "FlowFile will be routed to success if the message is received by a single Kafka node, whether or not it is replicated. This is faster than \u003CGuarantee Replicated Delivery\u003E but can result in data loss if a Kafka node crashes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Replicated Delivery",
                        "value": "all",
                        "description": "FlowFile will be routed to failure unless the message is replicated to the appropriate number of Kafka Nodes according to the Topic configuration"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Failure Strategy": {
                  "name": "Failure Strategy",
                  "displayName": "Failure Strategy",
                  "description": "Dictates how the processor handles a FlowFile if it is unable to publish the data to Kafka",
                  "defaultValue": "Route to Failure",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Failure",
                        "value": "Route to Failure",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be routed to the 'failure' relationship."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Rollback",
                        "value": "Rollback",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be placed back on the top of its queue so that it will be the next FlowFile tried again. For dataflows where ordering of FlowFiles is important, this strategy can be used along with ensuring that the each processor in the dataflow uses only a single Concurrent Task."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "use-transactions": {
                  "name": "use-transactions",
                  "displayName": "Use Transactions",
                  "description": "Specifies whether or not NiFi should provide Transactional guarantees when communicating with Kafka. If there is a problem sending data to Kafka, and this property is set to false, then the messages that have already been sent to Kafka will continue on and be delivered to consumers. If this is set to true, then the Kafka transaction will be rolled back so that those messages are not available to consumers. Setting this to true requires that the \u003CDelivery Guarantee\u003E property be set to \"Guarantee Replicated Delivery.\"",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "transactional-id-prefix": {
                  "name": "transactional-id-prefix",
                  "displayName": "Transactional Id Prefix",
                  "description": "When Use Transaction is set to true, KafkaProducer config 'transactional.id' will be a generated UUID and will be prefixed with this string.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "attribute-name-regex": {
                  "name": "attribute-name-regex",
                  "displayName": "Attributes to Send as Headers (Regex)",
                  "description": "A Regular Expression that is matched against all FlowFile attribute names. Any attribute whose name matches the regex will be added to the Kafka messages as a Header. If not specified, no FlowFile attributes will be added as headers.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-header-encoding": {
                  "name": "message-header-encoding",
                  "displayName": "Message Header Encoding",
                  "description": "For any attribute that is added as a message header, as configured via the \u003CAttributes to Send as Headers\u003E property, this property indicates the Character Encoding to use for serializing the headers.",
                  "defaultValue": "UTF-8",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "kafka-key": {
                  "name": "kafka-key",
                  "displayName": "Kafka Key",
                  "description": "The Key to use for the Message. If not specified, the flow file attribute 'kafka.key' is used as the message key, if it is present.Beware that setting Kafka key and demarcating at the same time may potentially lead to many Kafka messages with the same key.Normally this is not a problem as Kafka does not enforce or assume message and key uniqueness. Still, setting the demarcator and Kafka key at the same time poses a risk of data loss on Kafka. During a topic compaction on Kafka, messages will be deduplicated based on this key.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "key-attribute-encoding": {
                  "name": "key-attribute-encoding",
                  "displayName": "Key Attribute Encoding",
                  "description": "FlowFiles that are emitted have an attribute named 'kafka.key'. This property dictates how the value of the attribute should be encoded.",
                  "defaultValue": "utf-8",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "UTF-8 Encoded",
                        "value": "utf-8",
                        "description": "The key is interpreted as a UTF-8 Encoded string."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Hex Encoded",
                        "value": "hex",
                        "description": "The key is interpreted as arbitrary binary data that is encoded using hexadecimal characters with uppercase letters."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-demarcator": {
                  "name": "message-demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the string (interpreted as UTF-8) to use for demarcating multiple messages within a single FlowFile. If not specified, the entire content of the FlowFile will be used as a single message. If specified, the contents of the FlowFile will be split on this delimiter and each section sent as a separate Kafka message. To enter special character such as 'new line' use CTRL+Enter or Shift+Enter, depending on your OS.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "max.request.size": {
                  "name": "max.request.size",
                  "displayName": "Max Request Size",
                  "description": "The maximum size of a request in bytes. Corresponds to Kafka's 'max.request.size' property and defaults to 1 MB (1048576).",
                  "defaultValue": "1 MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ack.wait.time": {
                  "name": "ack.wait.time",
                  "displayName": "Acknowledgment Wait Time",
                  "description": "After sending a message to Kafka, this indicates the amount of time that we are willing to wait for a response from Kafka. If Kafka does not acknowledge the message within this time period, the FlowFile will be routed to 'failure'.",
                  "defaultValue": "5 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max.block.ms": {
                  "name": "max.block.ms",
                  "displayName": "Max Metadata Wait Time",
                  "description": "The amount of time publisher will wait to obtain metadata or wait for the buffer to flush during the 'send' call before failing the entire 'send' call. Corresponds to Kafka's 'max.block.ms' property",
                  "defaultValue": "5 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "partitioner.class": {
                  "name": "partitioner.class",
                  "displayName": "Partitioner class",
                  "description": "Specifies which class to use to compute a partition id for a message. Corresponds to Kafka's 'partitioner.class' property.",
                  "defaultValue": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "RoundRobinPartitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$RoundRobinPartitioner",
                        "description": "Messages will be assigned partitions in a round-robin fashion, sending the first message to Partition 1, the next Partition to Partition 2, and so on, wrapping as necessary."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DefaultPartitioner",
                        "value": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                        "description": "Messages will be assigned to random partitions."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Expression Language Partitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$ExpressionLanguagePartitioner",
                        "description": "Interprets the \u003CPartition\u003E property as Expression Language that will be evaluated against each FlowFile. This Expression will be evaluated once against the FlowFile, so all Records in a given FlowFile will go to the same partition."
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "partition": {
                  "name": "partition",
                  "displayName": "Partition",
                  "description": "Specifies which Partition Records will go to.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "compression.type": {
                  "name": "compression.type",
                  "displayName": "Compression Type",
                  "description": "This parameter allows you to specify the compression codec for all data generated by this producer.",
                  "defaultValue": "none",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "none",
                        "value": "none"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "gzip",
                        "value": "gzip"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "snappy",
                        "value": "snappy"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "lz4",
                        "value": "lz4"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [
              "'Relationship success' is invalid because Relationship 'success' is not connected to any component and is not auto-terminated",
              "'Upstream Connections' is invalid because Processor requires an upstream connection but currently has none"
            ],
            "validationStatus": "INVALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "dc3d3702-7f00-138e-982c-423e499f715a",
            "name": "PublishKafka_2_0",
            "runStatus": "Invalid",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "dc3d3702-7f00-138e-982c-423e499f715a",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "type": "PublishKafka_2_0",
              "runStatus": "Invalid",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
          "position": {
            "x": 864,
            "y": 264
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 864,
              "y": 264
            },
            "name": "ReplaceText",
            "type": "org.apache.nifi.processors.standard.ReplaceText",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles that could not be updated are routed to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles that have been successfully processed are routed to this relationship. This includes both FlowFiles that had text replaced and those that did not.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Regular Expression": "(?s)(^.*$)",
                "Replacement Value": "{ \"data\" : \"not OK\"  }",
                "Character Set": "UTF-8",
                "Maximum Buffer Size": "1 MB",
                "Replacement Strategy": "Regex Replace",
                "Evaluation Mode": "Line-by-Line",
                "Line-by-Line Evaluation Mode": "All"
              },
              "descriptors": {
                "Regular Expression": {
                  "name": "Regular Expression",
                  "displayName": "Search Value",
                  "description": "The Search Value to search for in the FlowFile content. Only used for 'Literal Replace' and 'Regex Replace' matching strategies",
                  "defaultValue": "(?s)(^.*$)",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Replacement Value": {
                  "name": "Replacement Value",
                  "displayName": "Replacement Value",
                  "description": "The value to insert using the 'Replacement Strategy'. Using \"Regex Replace\" back-references to Regular Expression capturing groups are supported, but back-references that reference capturing groups that do not exist in the regular expression will be treated as literal value. Back References may also be referenced using the Expression Language, as '$1', '$2', etc. The single-tick marks MUST be included, as these variables are not \"Standard\" attribute names (attribute names must be quoted unless they contain only numbers, letters, and _).",
                  "defaultValue": "$1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Character Set": {
                  "name": "Character Set",
                  "displayName": "Character Set",
                  "description": "The Character Set in which the file is encoded",
                  "defaultValue": "UTF-8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Maximum Buffer Size": {
                  "name": "Maximum Buffer Size",
                  "displayName": "Maximum Buffer Size",
                  "description": "Specifies the maximum amount of data to buffer (per file or per line, depending on the Evaluation Mode) in order to apply the replacement. If 'Entire Text' (in Evaluation Mode) is selected and the FlowFile is larger than this value, the FlowFile will be routed to 'failure'. In 'Line-by-Line' Mode, if a single line is larger than this value, the FlowFile will be routed to 'failure'. A default value of 1 MB is provided, primarily for 'Entire Text' mode. In 'Line-by-Line' Mode, a value such as 8 KB or 16 KB is suggested. This value is ignored if the \u003CReplacement Strategy\u003E property is set to one of: Append, Prepend, Always Replace",
                  "defaultValue": "1 MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Replacement Strategy": {
                  "name": "Replacement Strategy",
                  "displayName": "Replacement Strategy",
                  "description": "The strategy for how and what to replace within the FlowFile's text content.",
                  "defaultValue": "Regex Replace",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Prepend",
                        "value": "Prepend",
                        "description": "Insert the Replacement Value at the beginning of the FlowFile or the beginning of each line (depending on the Evaluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be prepended to each line. Similarly, for \"First-Line\", \"Last-Line\", \"Except-Last-Line\" and \"Except-First-Line\" Evaluation Modes,the value will be prepended to header alone, footer alone, all lines except header and all lines except footer respectively. For \"Entire Text\" evaluation mode,the value will be prepended to the entire text."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Append",
                        "value": "Append",
                        "description": "Insert the Replacement Value at the end of the FlowFile or the end of each line (depending on the Evaluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be appended to each line. Similarly, for \"First-Line\", \"Last-Line\", \"Except-Last-Line\" and \"Except-First-Line\" Evaluation Modes,the value will be appended to header alone, footer alone, all lines except header and all lines except footer respectively. For \"Entire Text\" evaluation mode,the value will be appended to the entire text."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Regex Replace",
                        "value": "Regex Replace",
                        "description": "Interpret the Search Value as a Regular Expression and replace all matches with the Replacement Value. The Replacement Value may reference Capturing Groups used in the Search Value by using a dollar-sign followed by the Capturing Group number, such as $1 or $2. If the Search Value is set to .* then everything is replaced without even evaluating the Regular Expression."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Literal Replace",
                        "value": "Literal Replace",
                        "description": "Search for all instances of the Search Value and replace the matches with the Replacement Value."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Always Replace",
                        "value": "Always Replace",
                        "description": "Always replaces the entire line or the entire contents of the FlowFile (depending on the value of the \u003CEvaluation Mode\u003E property) and does not bother searching for any value. When this strategy is chosen, the \u003CSearch Value\u003E property is ignored."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Substitute Variables",
                        "value": "Substitute Variables",
                        "description": "Substitute variable references (specified in ${var} form) using FlowFile attributes for looking up the replacement value by variable name. When this strategy is chosen, both the \u003CSearch Value\u003E and \u003CReplacement Value\u003E properties are ignored."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Evaluation Mode": {
                  "name": "Evaluation Mode",
                  "displayName": "Evaluation Mode",
                  "description": "Run the 'Replacement Strategy' against each line separately (Line-by-Line) or buffer the entire file into memory (Entire Text) and run against that.",
                  "defaultValue": "Line-by-Line",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Line-by-Line",
                        "value": "Line-by-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Entire text",
                        "value": "Entire text"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Line-by-Line Evaluation Mode": {
                  "name": "Line-by-Line Evaluation Mode",
                  "displayName": "Line-by-Line Evaluation Mode",
                  "description": "Run the 'Replacement Strategy' against each line separately (Line-by-Line) for all lines in the FlowFile, First Line (Header) alone, Last Line (Footer) alone, Except the First Line (Header) or Except the Last Line (Footer).",
                  "defaultValue": "All",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "All",
                        "value": "All"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "First-Line",
                        "value": "First-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Last-Line",
                        "value": "Last-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Except-First-Line",
                        "value": "Except-First-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Except-Last-Line",
                        "value": "Except-Last-Line"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
            "name": "ReplaceText",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ReplaceText",
              "type": "ReplaceText",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/2d8cce7a-3654-3401-8f1f-8fd1ae051298",
          "position": {
            "x": 536,
            "y": 32
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 536,
              "y": 32
            },
            "name": "HandleHttpRequest",
            "type": "org.apache.nifi.processors.standard.HandleHttpRequest",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "success",
                "description": "All content that is received is routed to the 'success' relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Listening Port": "8989",
                "Hostname": null,
                "SSL Context Service": null,
                "HTTP Context Map": "06d975b9-5e28-3c26-9771-c271bd8b95d8",
                "Allowed Paths": null,
                "Default URL Character Set": "UTF-8",
                "Allow GET": "true",
                "Allow POST": "true",
                "Allow PUT": "true",
                "Allow DELETE": "true",
                "Allow HEAD": "false",
                "Allow OPTIONS": "false",
                "Additional HTTP Methods": null,
                "Client Authentication": "No Authentication",
                "container-queue-size": "50",
                "multipart-request-max-size": "1 MB",
                "multipart-read-buffer-size": "512 KB",
                "parameters-to-attributes": null
              },
              "descriptors": {
                "Listening Port": {
                  "name": "Listening Port",
                  "displayName": "Listening Port",
                  "description": "The Port to listen on for incoming HTTP requests",
                  "defaultValue": "80",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The Hostname to bind to. If not specified, will bind to all hosts",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "The SSL Context Service to use in order to secure the server. If specified, the server will accept only HTTPS requests; otherwise, the server will accept only HTTP requests",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.RestrictedSSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "HTTP Context Map": {
                  "name": "HTTP Context Map",
                  "displayName": "HTTP Context Map",
                  "description": "The HTTP Context Map Controller Service to use for caching the HTTP Request Information",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "StandardHttpContextMap",
                        "value": "06d975b9-5e28-3c26-9771-c271bd8b95d8"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.http.HttpContextMap",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "Allowed Paths": {
                  "name": "Allowed Paths",
                  "displayName": "Allowed Paths",
                  "description": "A Regular Expression that specifies the valid HTTP Paths that are allowed in the incoming URL Requests. If this value is specified and the path of the HTTP Requests does not match this Regular Expression, the Processor will respond with a 404: NotFound",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Default URL Character Set": {
                  "name": "Default URL Character Set",
                  "displayName": "Default URL Character Set",
                  "description": "The character set to use for decoding URL parameters if the HTTP Request does not supply one",
                  "defaultValue": "UTF-8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Allow GET": {
                  "name": "Allow GET",
                  "displayName": "Allow GET",
                  "description": "Allow HTTP GET Method",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Allow POST": {
                  "name": "Allow POST",
                  "displayName": "Allow POST",
                  "description": "Allow HTTP POST Method",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Allow PUT": {
                  "name": "Allow PUT",
                  "displayName": "Allow PUT",
                  "description": "Allow HTTP PUT Method",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Allow DELETE": {
                  "name": "Allow DELETE",
                  "displayName": "Allow DELETE",
                  "description": "Allow HTTP DELETE Method",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Allow HEAD": {
                  "name": "Allow HEAD",
                  "displayName": "Allow HEAD",
                  "description": "Allow HTTP HEAD Method",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Allow OPTIONS": {
                  "name": "Allow OPTIONS",
                  "displayName": "Allow OPTIONS",
                  "description": "Allow HTTP OPTIONS Method",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Additional HTTP Methods": {
                  "name": "Additional HTTP Methods",
                  "displayName": "Additional HTTP Methods",
                  "description": "A comma-separated list of non-standard HTTP Methods that should be allowed",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Client Authentication": {
                  "name": "Client Authentication",
                  "displayName": "Client Authentication",
                  "description": "Specifies whether or not the Processor should authenticate clients. This value is ignored if the \u003CSSL Context Service\u003E Property is not specified or the SSL Context provided uses only a KeyStore and not a TrustStore.",
                  "defaultValue": "No Authentication",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "No Authentication",
                        "value": "No Authentication",
                        "description": "Processor will not authenticate clients. Anyone can communicate with this Processor anonymously"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Want Authentication",
                        "value": "Want Authentication",
                        "description": "Processor will try to verify the client but if unable to verify will allow the client to communicate anonymously"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Need Authentication",
                        "value": "Need Authentication",
                        "description": "Processor will reject communications from any client unless the client provides a certificate that is trusted by the TrustStorespecified in the SSL Context Service"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "container-queue-size": {
                  "name": "container-queue-size",
                  "displayName": "Container Queue Size",
                  "description": "The size of the queue for Http Request Containers",
                  "defaultValue": "50",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "multipart-request-max-size": {
                  "name": "multipart-request-max-size",
                  "displayName": "Multipart Request Max Size",
                  "description": "The max size of the request. Only applies for requests with Content-Type: multipart/form-data, and is used to prevent denial of service type of attacks, to prevent filling up the heap or disk space",
                  "defaultValue": "1 MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "multipart-read-buffer-size": {
                  "name": "multipart-read-buffer-size",
                  "displayName": "Multipart Read Buffer Size",
                  "description": "The threshold size, at which the contents of an incoming file would be written to disk. Only applies for requests with Content-Type: multipart/form-data. It is used to prevent denial of service type of attacks, to prevent filling up the heap or disk space.",
                  "defaultValue": "512 KB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "parameters-to-attributes": {
                  "name": "parameters-to-attributes",
                  "displayName": "Parameters to Attributes List",
                  "description": "A comma-separated list of HTTP parameters or form data to output as attributes",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
            "name": "HandleHttpRequest",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpRequest",
              "type": "HandleHttpRequest",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 133457,
              "tasksDurationNanos": 292595836991,
              "tasks": "133,457",
              "tasksDuration": "00:04:52.595",
              "activeThreadCount": 1,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "f6a68058-0ed8-3432-9d16-883c485c1b32",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/f6a68058-0ed8-3432-9d16-883c485c1b32",
          "position": {
            "x": 3128,
            "y": 112
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [
            {
              "id": 1135,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "timestamp": "13:20:38 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1135,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=f6a68058-0ed8-3432-9d16-883c485c1b32] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:20:38 UTC"
              }
            },
            {
              "id": 1132,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "timestamp": "13:20:27 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1132,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=f6a68058-0ed8-3432-9d16-883c485c1b32] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:20:27 UTC"
              }
            },
            {
              "id": 1131,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "timestamp": "13:20:16 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1131,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=f6a68058-0ed8-3432-9d16-883c485c1b32] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:20:16 UTC"
              }
            },
            {
              "id": 1129,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "timestamp": "13:20:05 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1129,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=f6a68058-0ed8-3432-9d16-883c485c1b32] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:20:05 UTC"
              }
            },
            {
              "id": 1125,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "timestamp": "13:19:54 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1125,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
                "sourceName": "PublishKafka_2_0",
                "level": "ERROR",
                "message": "PublishKafka_2_0[id=f6a68058-0ed8-3432-9d16-883c485c1b32] Failed to process session due to Timeout expired while initializing transactional state in 5000ms.; Processor Administratively Yielded for 1 sec: org.apache.kafka.common.errors.TimeoutException: Timeout expired while initializing transactional state in 5000ms.",
                "timestamp": "13:19:54 UTC"
              }
            }
          ],
          "component": {
            "id": "f6a68058-0ed8-3432-9d16-883c485c1b32",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 3128,
              "y": 112
            },
            "name": "PublishKafka_2_0",
            "type": "org.apache.nifi.processors.kafka.pubsub.PublishKafka_2_0",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-kafka-2-0-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "Any FlowFile that cannot be sent to Kafka will be routed to this Relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles for which all content was sent to Kafka.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "bootstrap.servers": "localhost:9023",
                "security.protocol": "PLAINTEXT",
                "sasl.mechanism": "GSSAPI",
                "sasl.kerberos.service.name": null,
                "kerberos-credentials-service": null,
                "sasl.kerberos.principal": null,
                "sasl.kerberos.keytab": null,
                "sasl.username": null,
                "sasl.password": null,
                "sasl.token.auth": "false",
                "ssl.context.service": null,
                "topic": "data_pushKafka",
                "acks": "all",
                "Failure Strategy": "Route to Failure",
                "use-transactions": "true",
                "transactional-id-prefix": null,
                "attribute-name-regex": null,
                "message-header-encoding": "UTF-8",
                "kafka-key": null,
                "key-attribute-encoding": "utf-8",
                "message-demarcator": null,
                "max.request.size": "1 MB",
                "ack.wait.time": "5 secs",
                "max.block.ms": "5 sec",
                "partitioner.class": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                "partition": null,
                "compression.type": "none"
              },
              "descriptors": {
                "bootstrap.servers": {
                  "name": "bootstrap.servers",
                  "displayName": "Kafka Brokers",
                  "description": "A comma-separated list of known Kafka Brokers in the format \u003Chost\u003E:\u003Cport\u003E",
                  "defaultValue": "localhost:9092",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "security.protocol": {
                  "name": "security.protocol",
                  "displayName": "Security Protocol",
                  "description": "Protocol used to communicate with brokers. Corresponds to Kafka's 'security.protocol' property.",
                  "defaultValue": "PLAINTEXT",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "PLAINTEXT",
                        "value": "PLAINTEXT",
                        "description": "PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SSL",
                        "value": "SSL",
                        "description": "SSL"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_PLAINTEXT",
                        "value": "SASL_PLAINTEXT",
                        "description": "SASL_PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_SSL",
                        "value": "SASL_SSL",
                        "description": "SASL_SSL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.mechanism": {
                  "name": "sasl.mechanism",
                  "displayName": "SASL Mechanism",
                  "description": "The SASL mechanism to use for authentication. Corresponds to Kafka's 'sasl.mechanism' property.",
                  "defaultValue": "GSSAPI",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "GSSAPI",
                        "value": "GSSAPI",
                        "description": "The mechanism for authentication via Kerberos. The principal and keytab must be provided to the processor by using a Keytab Credential service, or by specifying the properties directly in the processor."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "PLAIN",
                        "value": "PLAIN",
                        "description": "The mechanism for authentication via username and password. The username and password properties must be populated when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-256",
                        "value": "SCRAM-SHA-256",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-256. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-512",
                        "value": "SCRAM-SHA-512",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-512. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.kerberos.service.name": {
                  "name": "sasl.kerberos.service.name",
                  "displayName": "Kerberos Service Name",
                  "description": "The service name that matches the primary name of the Kafka server configured in the broker JAAS file.This can be defined either in Kafka's JAAS config or in Kafka's config. Corresponds to Kafka's 'security.protocol' property.It is ignored unless one of the SASL options of the \u003CSecurity Protocol\u003E are selected.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "kerberos-credentials-service": {
                  "name": "kerberos-credentials-service",
                  "displayName": "Kerberos Credentials Service",
                  "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "sasl.kerberos.principal": {
                  "name": "sasl.kerberos.principal",
                  "displayName": "Kerberos Principal",
                  "description": "The Kerberos principal that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.kerberos.keytab": {
                  "name": "sasl.kerberos.keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "The Kerberos keytab that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.username": {
                  "name": "sasl.username",
                  "displayName": "Username",
                  "description": "The username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.password": {
                  "name": "sasl.password",
                  "displayName": "Password",
                  "description": "The password for the given username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.token.auth": {
                  "name": "sasl.token.auth",
                  "displayName": "Token Auth",
                  "description": "When SASL Mechanism is SCRAM-SHA-256 or SCRAM-SHA-512, this property indicates if token authentication should be used.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ssl.context.service": {
                  "name": "ssl.context.service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies the SSL Context Service to use for communicating with Kafka.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "topic": {
                  "name": "topic",
                  "displayName": "Topic Name",
                  "description": "The name of the Kafka Topic to publish to.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "acks": {
                  "name": "acks",
                  "displayName": "Delivery Guarantee",
                  "description": "Specifies the requirement for guaranteeing that a message is sent to Kafka. Corresponds to Kafka's 'acks' property.",
                  "defaultValue": "0",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Best Effort",
                        "value": "0",
                        "description": "FlowFile will be routed to success after successfully writing the content to a Kafka node, without waiting for a response. This provides the best performance but may result in data loss."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Single Node Delivery",
                        "value": "1",
                        "description": "FlowFile will be routed to success if the message is received by a single Kafka node, whether or not it is replicated. This is faster than \u003CGuarantee Replicated Delivery\u003E but can result in data loss if a Kafka node crashes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Replicated Delivery",
                        "value": "all",
                        "description": "FlowFile will be routed to failure unless the message is replicated to the appropriate number of Kafka Nodes according to the Topic configuration"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Failure Strategy": {
                  "name": "Failure Strategy",
                  "displayName": "Failure Strategy",
                  "description": "Dictates how the processor handles a FlowFile if it is unable to publish the data to Kafka",
                  "defaultValue": "Route to Failure",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Failure",
                        "value": "Route to Failure",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be routed to the 'failure' relationship."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Rollback",
                        "value": "Rollback",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be placed back on the top of its queue so that it will be the next FlowFile tried again. For dataflows where ordering of FlowFiles is important, this strategy can be used along with ensuring that the each processor in the dataflow uses only a single Concurrent Task."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "use-transactions": {
                  "name": "use-transactions",
                  "displayName": "Use Transactions",
                  "description": "Specifies whether or not NiFi should provide Transactional guarantees when communicating with Kafka. If there is a problem sending data to Kafka, and this property is set to false, then the messages that have already been sent to Kafka will continue on and be delivered to consumers. If this is set to true, then the Kafka transaction will be rolled back so that those messages are not available to consumers. Setting this to true requires that the \u003CDelivery Guarantee\u003E property be set to \"Guarantee Replicated Delivery.\"",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "transactional-id-prefix": {
                  "name": "transactional-id-prefix",
                  "displayName": "Transactional Id Prefix",
                  "description": "When Use Transaction is set to true, KafkaProducer config 'transactional.id' will be a generated UUID and will be prefixed with this string.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "attribute-name-regex": {
                  "name": "attribute-name-regex",
                  "displayName": "Attributes to Send as Headers (Regex)",
                  "description": "A Regular Expression that is matched against all FlowFile attribute names. Any attribute whose name matches the regex will be added to the Kafka messages as a Header. If not specified, no FlowFile attributes will be added as headers.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-header-encoding": {
                  "name": "message-header-encoding",
                  "displayName": "Message Header Encoding",
                  "description": "For any attribute that is added as a message header, as configured via the \u003CAttributes to Send as Headers\u003E property, this property indicates the Character Encoding to use for serializing the headers.",
                  "defaultValue": "UTF-8",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "kafka-key": {
                  "name": "kafka-key",
                  "displayName": "Kafka Key",
                  "description": "The Key to use for the Message. If not specified, the flow file attribute 'kafka.key' is used as the message key, if it is present.Beware that setting Kafka key and demarcating at the same time may potentially lead to many Kafka messages with the same key.Normally this is not a problem as Kafka does not enforce or assume message and key uniqueness. Still, setting the demarcator and Kafka key at the same time poses a risk of data loss on Kafka. During a topic compaction on Kafka, messages will be deduplicated based on this key.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "key-attribute-encoding": {
                  "name": "key-attribute-encoding",
                  "displayName": "Key Attribute Encoding",
                  "description": "FlowFiles that are emitted have an attribute named 'kafka.key'. This property dictates how the value of the attribute should be encoded.",
                  "defaultValue": "utf-8",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "UTF-8 Encoded",
                        "value": "utf-8",
                        "description": "The key is interpreted as a UTF-8 Encoded string."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Hex Encoded",
                        "value": "hex",
                        "description": "The key is interpreted as arbitrary binary data that is encoded using hexadecimal characters with uppercase letters."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-demarcator": {
                  "name": "message-demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the string (interpreted as UTF-8) to use for demarcating multiple messages within a single FlowFile. If not specified, the entire content of the FlowFile will be used as a single message. If specified, the contents of the FlowFile will be split on this delimiter and each section sent as a separate Kafka message. To enter special character such as 'new line' use CTRL+Enter or Shift+Enter, depending on your OS.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "max.request.size": {
                  "name": "max.request.size",
                  "displayName": "Max Request Size",
                  "description": "The maximum size of a request in bytes. Corresponds to Kafka's 'max.request.size' property and defaults to 1 MB (1048576).",
                  "defaultValue": "1 MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ack.wait.time": {
                  "name": "ack.wait.time",
                  "displayName": "Acknowledgment Wait Time",
                  "description": "After sending a message to Kafka, this indicates the amount of time that we are willing to wait for a response from Kafka. If Kafka does not acknowledge the message within this time period, the FlowFile will be routed to 'failure'.",
                  "defaultValue": "5 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max.block.ms": {
                  "name": "max.block.ms",
                  "displayName": "Max Metadata Wait Time",
                  "description": "The amount of time publisher will wait to obtain metadata or wait for the buffer to flush during the 'send' call before failing the entire 'send' call. Corresponds to Kafka's 'max.block.ms' property",
                  "defaultValue": "5 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "partitioner.class": {
                  "name": "partitioner.class",
                  "displayName": "Partitioner class",
                  "description": "Specifies which class to use to compute a partition id for a message. Corresponds to Kafka's 'partitioner.class' property.",
                  "defaultValue": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "RoundRobinPartitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$RoundRobinPartitioner",
                        "description": "Messages will be assigned partitions in a round-robin fashion, sending the first message to Partition 1, the next Partition to Partition 2, and so on, wrapping as necessary."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DefaultPartitioner",
                        "value": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                        "description": "Messages will be assigned to random partitions."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Expression Language Partitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$ExpressionLanguagePartitioner",
                        "description": "Interprets the \u003CPartition\u003E property as Expression Language that will be evaluated against each FlowFile. This Expression will be evaluated once against the FlowFile, so all Records in a given FlowFile will go to the same partition."
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "partition": {
                  "name": "partition",
                  "displayName": "Partition",
                  "description": "Specifies which Partition Records will go to.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "compression.type": {
                  "name": "compression.type",
                  "displayName": "Compression Type",
                  "description": "This parameter allows you to specify the compression codec for all data generated by this producer.",
                  "defaultValue": "none",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "none",
                        "value": "none"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "gzip",
                        "value": "gzip"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "snappy",
                        "value": "snappy"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "lz4",
                        "value": "lz4"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "f6a68058-0ed8-3432-9d16-883c485c1b32",
            "name": "PublishKafka_2_0",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "type": "PublishKafka_2_0",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 28,
              "tasksDurationNanos": 280765820728,
              "tasks": "28",
              "tasksDuration": "00:04:40.765",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "bcb04da3-1daf-322d-b444-2dbb925302eb",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/bcb04da3-1daf-322d-b444-2dbb925302eb",
          "position": {
            "x": 2272,
            "y": 184
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [
            {
              "id": 1127,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "timestamp": "13:19:54 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1127,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=bcb04da3-1daf-322d-b444-2dbb925302eb] Routing to Failure due to exception: Failed to connect to /127.0.0.1:4533: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:4533",
                "timestamp": "13:19:54 UTC"
              }
            },
            {
              "id": 1107,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "timestamp": "13:18:32 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1107,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=bcb04da3-1daf-322d-b444-2dbb925302eb] Routing to Failure due to exception: Failed to connect to /127.0.0.1:4533: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:4533",
                "timestamp": "13:18:32 UTC"
              }
            },
            {
              "id": 1090,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "timestamp": "13:17:10 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1090,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=bcb04da3-1daf-322d-b444-2dbb925302eb] Routing to Failure due to exception: Failed to connect to /127.0.0.1:4533: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:4533",
                "timestamp": "13:17:10 UTC"
              }
            },
            {
              "id": 1070,
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "timestamp": "13:15:48 UTC",
              "nodeAddress": "10.244.0.107:8080",
              "canRead": true,
              "bulletin": {
                "id": 1070,
                "nodeAddress": "10.244.0.107:8080",
                "category": "Log Message",
                "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
                "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
                "sourceName": "InvokeHTTP",
                "level": "ERROR",
                "message": "InvokeHTTP[id=bcb04da3-1daf-322d-b444-2dbb925302eb] Routing to Failure due to exception: Failed to connect to /127.0.0.1:4533: java.net.ConnectException: Connection refused (Connection refused)\n↳ causes: java.net.ConnectException: Failed to connect to /127.0.0.1:4533",
                "timestamp": "13:15:48 UTC"
              }
            }
          ],
          "component": {
            "id": "bcb04da3-1daf-322d-b444-2dbb925302eb",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 2272,
              "y": 184
            },
            "name": "InvokeHTTP",
            "type": "org.apache.nifi.processors.standard.InvokeHTTP",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "Failure",
                "description": "The original FlowFile will be routed on any type of connection failure, timeout or general exception. It will have new attributes detailing the request.",
                "autoTerminate": false
              },
              {
                "name": "No Retry",
                "description": "The original FlowFile will be routed on any status code that should NOT be retried (1xx, 3xx, 4xx status codes).  It will have new attributes detailing the request.",
                "autoTerminate": false
              },
              {
                "name": "Original",
                "description": "The original FlowFile will be routed upon success (2xx status codes). It will have new attributes detailing the success of the request.",
                "autoTerminate": true
              },
              {
                "name": "Response",
                "description": "A Response FlowFile will be routed upon success (2xx status codes). If the 'Output Response Regardless' property is true then the response will be sent to this relationship regardless of the status code received.",
                "autoTerminate": false
              },
              {
                "name": "Retry",
                "description": "The original FlowFile will be routed on any status code that can be retried (5xx status codes). It will have new attributes detailing the request.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_ALLOWED",
            "config": {
              "properties": {
                "HTTP Method": "GET",
                "Remote URL": "http://127.0.0.1:4533",
                "SSL Context Service": null,
                "Connection Timeout": "5 secs",
                "Read Timeout": "15 secs",
                "idle-timeout": "5 mins",
                "max-idle-connections": "5",
                "Include Date Header": "True",
                "Follow Redirects": "True",
                "disable-http2": "False",
                "Attributes to Send": null,
                "Useragent": null,
                "Basic Authentication Username": null,
                "Basic Authentication Password": null,
                "proxy-configuration-service": null,
                "Proxy Host": null,
                "Proxy Port": null,
                "Proxy Type": "http",
                "invokehttp-proxy-user": null,
                "invokehttp-proxy-password": null,
                "Put Response Body In Attribute": null,
                "Max Length To Put In Attribute": "256",
                "Digest Authentication": "false",
                "Always Output Response": "false",
                "Add Response Headers to Request": "false",
                "Content-Type": "${mime.type}",
                "send-message-body": "true",
                "Use Chunked Encoding": "false",
                "Penalize on \"No Retry\"": "false",
                "use-etag": "false",
                "etag-max-cache-size": "10MB",
                "ignore-response-content": "false",
                "form-body-form-name": null,
                "set-form-filename": "true"
              },
              "descriptors": {
                "HTTP Method": {
                  "name": "HTTP Method",
                  "displayName": "HTTP Method",
                  "description": "HTTP request method (GET, POST, PUT, PATCH, DELETE, HEAD, OPTIONS). Arbitrary methods are also supported. Methods other than POST, PUT and PATCH will be sent without a message body.",
                  "defaultValue": "GET",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Remote URL": {
                  "name": "Remote URL",
                  "displayName": "Remote URL",
                  "description": "Remote URL which will be connected to, including scheme, host, port, path.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "The SSL Context Service used to provide client certificate information for TLS/SSL (https) connections. It is also used to connect to HTTPS Proxy.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Max wait time for connection to remote service.",
                  "defaultValue": "5 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Read Timeout": {
                  "name": "Read Timeout",
                  "displayName": "Read Timeout",
                  "description": "Max wait time for response from remote service.",
                  "defaultValue": "15 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "idle-timeout": {
                  "name": "idle-timeout",
                  "displayName": "Idle Timeout",
                  "description": "Max idle time before closing connection to the remote service.",
                  "defaultValue": "5 mins",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max-idle-connections": {
                  "name": "max-idle-connections",
                  "displayName": "Max Idle Connections",
                  "description": "Max number of idle connections to keep open.",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Include Date Header": {
                  "name": "Include Date Header",
                  "displayName": "Include Date Header",
                  "description": "Include an RFC-2616 Date header in the request.",
                  "defaultValue": "True",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "True",
                        "value": "True"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "False",
                        "value": "False"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Follow Redirects": {
                  "name": "Follow Redirects",
                  "displayName": "Follow Redirects",
                  "description": "Follow HTTP redirects issued by remote server.",
                  "defaultValue": "True",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "True",
                        "value": "True"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "False",
                        "value": "False"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "disable-http2": {
                  "name": "disable-http2",
                  "displayName": "Disable HTTP/2",
                  "description": "Determines whether or not to disable use of the HTTP/2 protocol version. If disabled, only HTTP/1.1 is supported.",
                  "defaultValue": "False",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "True",
                        "value": "True"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "False",
                        "value": "False"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Attributes to Send": {
                  "name": "Attributes to Send",
                  "displayName": "Attributes to Send",
                  "description": "Regular expression that defines which attributes to send as HTTP headers in the request. If not defined, no attributes are sent as headers. Also any dynamic properties set will be sent as headers. The dynamic property key will be the header key and the dynamic property value will be interpreted as expression language will be the header value.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Useragent": {
                  "name": "Useragent",
                  "displayName": "Useragent",
                  "description": "The Useragent identifier sent along with each request",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Basic Authentication Username": {
                  "name": "Basic Authentication Username",
                  "displayName": "Basic Authentication Username",
                  "description": "The username to be used by the client to authenticate against the Remote URL.  Cannot include control characters (0-31), ':', or DEL (127).",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Basic Authentication Password": {
                  "name": "Basic Authentication Password",
                  "displayName": "Basic Authentication Password",
                  "description": "The password to be used by the client to authenticate against the Remote URL.",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "proxy-configuration-service": {
                  "name": "proxy-configuration-service",
                  "displayName": "Proxy Configuration Service",
                  "description": "Specifies the Proxy Configuration Controller Service to proxy network requests. If set, it supersedes proxy settings configured per component. Supported proxies: SOCKS, HTTP + AuthN",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.proxy.ProxyConfigurationService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "The fully qualified hostname or IP address of the proxy server",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "Proxy Port": {
                  "name": "Proxy Port",
                  "displayName": "Proxy Port",
                  "description": "The port of the proxy server",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "Proxy Type": {
                  "name": "Proxy Type",
                  "displayName": "Proxy Type",
                  "description": "The type of the proxy we are connecting to. Must be either http or https",
                  "defaultValue": "http",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "invokehttp-proxy-user": {
                  "name": "invokehttp-proxy-user",
                  "displayName": "Proxy Username",
                  "description": "Username to set when authenticating against proxy",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "invokehttp-proxy-password": {
                  "name": "invokehttp-proxy-password",
                  "displayName": "Proxy Password",
                  "description": "Password to set when authenticating against proxy",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "Put Response Body In Attribute": {
                  "name": "Put Response Body In Attribute",
                  "displayName": "Put Response Body In Attribute",
                  "description": "If set, the response body received back will be put into an attribute of the original FlowFile instead of a separate FlowFile. The attribute key to put to is determined by evaluating value of this property. ",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Max Length To Put In Attribute": {
                  "name": "Max Length To Put In Attribute",
                  "displayName": "Max Length To Put In Attribute",
                  "description": "If routing the response body to an attribute of the original (by setting the \"Put response body in attribute\" property or by receiving an error status code), the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will be truncated to fit. Consider making this smaller if able.",
                  "defaultValue": "256",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Digest Authentication": {
                  "name": "Digest Authentication",
                  "displayName": "Use Digest Authentication",
                  "description": "Whether to communicate with the website using Digest Authentication. 'Basic Authentication Username' and 'Basic Authentication Password' are used for authentication.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Always Output Response": {
                  "name": "Always Output Response",
                  "displayName": "Always Output Response",
                  "description": "Will force a response FlowFile to be generated and routed to the 'Response' relationship regardless of what the server status code received is or if the processor is configured to put the server response body in the request attribute. In the later configuration a request FlowFile with the response body in the attribute and a typical response FlowFile will be emitted to their respective relationships.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Add Response Headers to Request": {
                  "name": "Add Response Headers to Request",
                  "displayName": "Add Response Headers to Request",
                  "description": "Enabling this property saves all the response headers to the original request. This may be when the response headers are needed but a response is not generated due to the status code received.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Content-Type": {
                  "name": "Content-Type",
                  "displayName": "Content-Type",
                  "description": "The Content-Type to specify for when content is being transmitted through a PUT, POST or PATCH. In the case of an empty value after evaluating an expression language expression, Content-Type defaults to application/octet-stream",
                  "defaultValue": "${mime.type}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "send-message-body": {
                  "name": "send-message-body",
                  "displayName": "Send Message Body",
                  "description": "If true, sends the HTTP message body on POST/PUT/PATCH requests (default).  If false, suppresses the message body and content-type header for these requests.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Use Chunked Encoding": {
                  "name": "Use Chunked Encoding",
                  "displayName": "Use Chunked Encoding",
                  "description": "When POST'ing, PUT'ing or PATCH'ing content set this property to true in order to not pass the 'Content-length' header and instead send 'Transfer-Encoding' with a value of 'chunked'. This will enable the data transfer mechanism which was introduced in HTTP 1.1 to pass data of unknown lengths in chunks.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Penalize on \"No Retry\"": {
                  "name": "Penalize on \"No Retry\"",
                  "displayName": "Penalize on \"No Retry\"",
                  "description": "Enabling this property will penalize FlowFiles that are routed to the \"No Retry\" relationship.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "use-etag": {
                  "name": "use-etag",
                  "displayName": "Use HTTP ETag",
                  "description": "Enable HTTP entity tag (ETag) support for HTTP requests.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "etag-max-cache-size": {
                  "name": "etag-max-cache-size",
                  "displayName": "Maximum ETag Cache Size",
                  "description": "The maximum size that the ETag cache should be allowed to grow to. The default size is 10MB.",
                  "defaultValue": "10MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ignore-response-content": {
                  "name": "ignore-response-content",
                  "displayName": "Ignore response's content",
                  "description": "If true, the processor will not write the response's content into the flow file.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "form-body-form-name": {
                  "name": "form-body-form-name",
                  "displayName": "FlowFile Form Data Name",
                  "description": "When Send Message Body is true, and FlowFile Form Data Name is set,  the FlowFile will be sent as the message body in multipart/form format with this value as the form data name.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "set-form-filename": {
                  "name": "set-form-filename",
                  "displayName": "Set FlowFile Form Data File Name",
                  "description": "When Send Message Body is true, FlowFile Form Data Name is set, and Set FlowFile Form Data File Name is true, the FlowFile's fileName value will be set as the filename property of the form data.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_ALLOWED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "bcb04da3-1daf-322d-b444-2dbb925302eb",
            "name": "InvokeHTTP",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "type": "InvokeHTTP",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 4,
              "bytesOut": 64,
              "output": "4 (64 bytes)",
              "taskCount": 4,
              "tasksDurationNanos": 18871712,
              "tasks": "4",
              "tasksDuration": "00:00:00.018",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "ce050034-b52d-3eca-b55c-dfda8780bac0",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/ce050034-b52d-3eca-b55c-dfda8780bac0",
          "position": {
            "x": 3128,
            "y": -168
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ce050034-b52d-3eca-b55c-dfda8780bac0",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 3128,
              "y": -168
            },
            "name": "GenerateFlowFile",
            "type": "org.apache.nifi.processors.standard.GenerateFlowFile",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "success",
                "description": "",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "File Size": "0B",
                "Batch Size": "1",
                "Data Format": "Text",
                "Unique FlowFiles": "false",
                "generate-ff-custom-text": "{ \"data\" : \"1\" }",
                "character-set": "UTF-8",
                "mime-type": null
              },
              "descriptors": {
                "File Size": {
                  "name": "File Size",
                  "displayName": "File Size",
                  "description": "The size of the file that will be used",
                  "defaultValue": "0B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "The number of FlowFiles to be transferred in each invocation",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Data Format": {
                  "name": "Data Format",
                  "displayName": "Data Format",
                  "description": "Specifies whether the data should be Text or Binary",
                  "defaultValue": "Text",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Binary",
                        "value": "Binary"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Unique FlowFiles": {
                  "name": "Unique FlowFiles",
                  "displayName": "Unique FlowFiles",
                  "description": "If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "generate-ff-custom-text": {
                  "name": "generate-ff-custom-text",
                  "displayName": "Custom Text",
                  "description": "If Data Format is text and if Unique FlowFiles is false, then this custom text will be used as content of the generated FlowFiles and the File Size will be ignored. Finally, if Expression Language is used, evaluation will be performed only once per batch of generated FlowFiles",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "character-set": {
                  "name": "character-set",
                  "displayName": "Character Set",
                  "description": "Specifies the character set to use when writing the bytes of Custom Text to a flow file.",
                  "defaultValue": "UTF-8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "mime-type": {
                  "name": "mime-type",
                  "displayName": "Mime Type",
                  "description": "Specifies the value to set for the \"mime.type\" attribute.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "82 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "ce050034-b52d-3eca-b55c-dfda8780bac0",
            "name": "GenerateFlowFile",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "ce050034-b52d-3eca-b55c-dfda8780bac0",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "type": "GenerateFlowFile",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 64,
              "read": "0 bytes",
              "written": "64 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 4,
              "bytesOut": 64,
              "output": "4 (64 bytes)",
              "taskCount": 4,
              "tasksDurationNanos": 12394821,
              "tasks": "4",
              "tasksDuration": "00:00:00.012",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/38e55457-49d1-31c8-a88b-0b7247fbeb7e",
          "position": {
            "x": 864,
            "y": 552
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 864,
              "y": 552
            },
            "name": "HandleHttpResponse",
            "type": "org.apache.nifi.processors.standard.HandleHttpResponse",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles will be routed to this Relationship if the Processor is unable to respond to the requestor. This may happen, for instance, if the connection times out or if NiFi is restarted before responding to the HTTP Request.",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles will be routed to this Relationship after the response has been successfully sent to the requestor",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "HTTP Status Code": "400",
                "HTTP Context Map": "06d975b9-5e28-3c26-9771-c271bd8b95d8",
                "Attributes to add to the HTTP Response (Regex)": null
              },
              "descriptors": {
                "HTTP Status Code": {
                  "name": "HTTP Status Code",
                  "displayName": "HTTP Status Code",
                  "description": "The HTTP Status Code to use when responding to the HTTP Request. See Section 10 of RFC 2616 for more information.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "HTTP Context Map": {
                  "name": "HTTP Context Map",
                  "displayName": "HTTP Context Map",
                  "description": "The HTTP Context Map Controller Service to use for caching the HTTP Request Information",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "StandardHttpContextMap",
                        "value": "06d975b9-5e28-3c26-9771-c271bd8b95d8"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.http.HttpContextMap",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "Attributes to add to the HTTP Response (Regex)": {
                  "name": "Attributes to add to the HTTP Response (Regex)",
                  "displayName": "Attributes to add to the HTTP Response (Regex)",
                  "description": "Specifies the Regular Expression that determines the names of FlowFile attributes that should be added to the HTTP response",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
            "name": "HandleHttpResponse",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpResponse",
              "type": "HandleHttpResponse",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "clientId": "22bb31d6-16e9-1bf8-a16b-2255b9befdc1",
            "version": 4
          },
          "id": "05ab37f3-ed4b-178b-abe7-2838a09d1479",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/05ab37f3-ed4b-178b-abe7-2838a09d1479",
          "position": {
            "x": 4736,
            "y": 712
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "05ab37f3-ed4b-178b-abe7-2838a09d1479",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 4736,
              "y": 712
            },
            "name": "GenerateFlowFile",
            "type": "org.apache.nifi.processors.standard.GenerateFlowFile",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "STOPPED",
            "style": {

            },
            "relationships": [
              {
                "name": "success",
                "description": "",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "File Size": "0B",
                "Batch Size": "1",
                "Data Format": "Text",
                "Unique FlowFiles": "false",
                "generate-ff-custom-text": "{ \"data\" : \"1\" }",
                "character-set": "UTF-8",
                "mime-type": null
              },
              "descriptors": {
                "File Size": {
                  "name": "File Size",
                  "displayName": "File Size",
                  "description": "The size of the file that will be used",
                  "defaultValue": "0B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "The number of FlowFiles to be transferred in each invocation",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Data Format": {
                  "name": "Data Format",
                  "displayName": "Data Format",
                  "description": "Specifies whether the data should be Text or Binary",
                  "defaultValue": "Text",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Binary",
                        "value": "Binary"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Unique FlowFiles": {
                  "name": "Unique FlowFiles",
                  "displayName": "Unique FlowFiles",
                  "description": "If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "generate-ff-custom-text": {
                  "name": "generate-ff-custom-text",
                  "displayName": "Custom Text",
                  "description": "If Data Format is text and if Unique FlowFiles is false, then this custom text will be used as content of the generated FlowFiles and the File Size will be ignored. Finally, if Expression Language is used, evaluation will be performed only once per batch of generated FlowFiles",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "character-set": {
                  "name": "character-set",
                  "displayName": "Character Set",
                  "description": "Specifies the character set to use when writing the bytes of Custom Text to a flow file.",
                  "defaultValue": "UTF-8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "mime-type": {
                  "name": "mime-type",
                  "displayName": "Mime Type",
                  "description": "Specifies the value to set for the \"mime.type\" attribute.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "82 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "05ab37f3-ed4b-178b-abe7-2838a09d1479",
            "name": "GenerateFlowFile",
            "runStatus": "Stopped",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "05ab37f3-ed4b-178b-abe7-2838a09d1479",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "type": "GenerateFlowFile",
              "runStatus": "Stopped",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "0c7d5995-e10a-36be-81ff-a4164400ece9",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/0c7d5995-e10a-36be-81ff-a4164400ece9",
          "position": {
            "x": 368,
            "y": 552
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "0c7d5995-e10a-36be-81ff-a4164400ece9",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 368,
              "y": 552
            },
            "name": "HandleHttpResponse",
            "type": "org.apache.nifi.processors.standard.HandleHttpResponse",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles will be routed to this Relationship if the Processor is unable to respond to the requestor. This may happen, for instance, if the connection times out or if NiFi is restarted before responding to the HTTP Request.",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles will be routed to this Relationship after the response has been successfully sent to the requestor",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "HTTP Status Code": "200",
                "HTTP Context Map": "06d975b9-5e28-3c26-9771-c271bd8b95d8",
                "Attributes to add to the HTTP Response (Regex)": null
              },
              "descriptors": {
                "HTTP Status Code": {
                  "name": "HTTP Status Code",
                  "displayName": "HTTP Status Code",
                  "description": "The HTTP Status Code to use when responding to the HTTP Request. See Section 10 of RFC 2616 for more information.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "HTTP Context Map": {
                  "name": "HTTP Context Map",
                  "displayName": "HTTP Context Map",
                  "description": "The HTTP Context Map Controller Service to use for caching the HTTP Request Information",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "StandardHttpContextMap",
                        "value": "06d975b9-5e28-3c26-9771-c271bd8b95d8"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.http.HttpContextMap",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "Attributes to add to the HTTP Response (Regex)": {
                  "name": "Attributes to add to the HTTP Response (Regex)",
                  "displayName": "Attributes to add to the HTTP Response (Regex)",
                  "description": "Specifies the Regular Expression that determines the names of FlowFile attributes that should be added to the HTTP response",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "0c7d5995-e10a-36be-81ff-a4164400ece9",
            "name": "HandleHttpResponse",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "0c7d5995-e10a-36be-81ff-a4164400ece9",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpResponse",
              "type": "HandleHttpResponse",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "version": 1
          },
          "id": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/cd7165f5-d923-31a6-95c3-89d87fa09d3f",
          "position": {
            "x": 362.023487924939,
            "y": 270.886286515093
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 362.023487924939,
              "y": 270.886286515093
            },
            "name": "ReplaceText",
            "type": "org.apache.nifi.processors.standard.ReplaceText",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "RUNNING",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles that could not be updated are routed to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles that have been successfully processed are routed to this relationship. This includes both FlowFiles that had text replaced and those that did not.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Regular Expression": "(?s)(^.*$)",
                "Replacement Value": "{ \"data\" : \"OK\"  }",
                "Character Set": "UTF-8",
                "Maximum Buffer Size": "1 MB",
                "Replacement Strategy": "Regex Replace",
                "Evaluation Mode": "Line-by-Line",
                "Line-by-Line Evaluation Mode": "All"
              },
              "descriptors": {
                "Regular Expression": {
                  "name": "Regular Expression",
                  "displayName": "Search Value",
                  "description": "The Search Value to search for in the FlowFile content. Only used for 'Literal Replace' and 'Regex Replace' matching strategies",
                  "defaultValue": "(?s)(^.*$)",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Replacement Value": {
                  "name": "Replacement Value",
                  "displayName": "Replacement Value",
                  "description": "The value to insert using the 'Replacement Strategy'. Using \"Regex Replace\" back-references to Regular Expression capturing groups are supported, but back-references that reference capturing groups that do not exist in the regular expression will be treated as literal value. Back References may also be referenced using the Expression Language, as '$1', '$2', etc. The single-tick marks MUST be included, as these variables are not \"Standard\" attribute names (attribute names must be quoted unless they contain only numbers, letters, and _).",
                  "defaultValue": "$1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "Character Set": {
                  "name": "Character Set",
                  "displayName": "Character Set",
                  "description": "The Character Set in which the file is encoded",
                  "defaultValue": "UTF-8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Maximum Buffer Size": {
                  "name": "Maximum Buffer Size",
                  "displayName": "Maximum Buffer Size",
                  "description": "Specifies the maximum amount of data to buffer (per file or per line, depending on the Evaluation Mode) in order to apply the replacement. If 'Entire Text' (in Evaluation Mode) is selected and the FlowFile is larger than this value, the FlowFile will be routed to 'failure'. In 'Line-by-Line' Mode, if a single line is larger than this value, the FlowFile will be routed to 'failure'. A default value of 1 MB is provided, primarily for 'Entire Text' mode. In 'Line-by-Line' Mode, a value such as 8 KB or 16 KB is suggested. This value is ignored if the \u003CReplacement Strategy\u003E property is set to one of: Append, Prepend, Always Replace",
                  "defaultValue": "1 MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Replacement Strategy": {
                  "name": "Replacement Strategy",
                  "displayName": "Replacement Strategy",
                  "description": "The strategy for how and what to replace within the FlowFile's text content.",
                  "defaultValue": "Regex Replace",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Prepend",
                        "value": "Prepend",
                        "description": "Insert the Replacement Value at the beginning of the FlowFile or the beginning of each line (depending on the Evaluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be prepended to each line. Similarly, for \"First-Line\", \"Last-Line\", \"Except-Last-Line\" and \"Except-First-Line\" Evaluation Modes,the value will be prepended to header alone, footer alone, all lines except header and all lines except footer respectively. For \"Entire Text\" evaluation mode,the value will be prepended to the entire text."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Append",
                        "value": "Append",
                        "description": "Insert the Replacement Value at the end of the FlowFile or the end of each line (depending on the Evaluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be appended to each line. Similarly, for \"First-Line\", \"Last-Line\", \"Except-Last-Line\" and \"Except-First-Line\" Evaluation Modes,the value will be appended to header alone, footer alone, all lines except header and all lines except footer respectively. For \"Entire Text\" evaluation mode,the value will be appended to the entire text."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Regex Replace",
                        "value": "Regex Replace",
                        "description": "Interpret the Search Value as a Regular Expression and replace all matches with the Replacement Value. The Replacement Value may reference Capturing Groups used in the Search Value by using a dollar-sign followed by the Capturing Group number, such as $1 or $2. If the Search Value is set to .* then everything is replaced without even evaluating the Regular Expression."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Literal Replace",
                        "value": "Literal Replace",
                        "description": "Search for all instances of the Search Value and replace the matches with the Replacement Value."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Always Replace",
                        "value": "Always Replace",
                        "description": "Always replaces the entire line or the entire contents of the FlowFile (depending on the value of the \u003CEvaluation Mode\u003E property) and does not bother searching for any value. When this strategy is chosen, the \u003CSearch Value\u003E property is ignored."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Substitute Variables",
                        "value": "Substitute Variables",
                        "description": "Substitute variable references (specified in ${var} form) using FlowFile attributes for looking up the replacement value by variable name. When this strategy is chosen, both the \u003CSearch Value\u003E and \u003CReplacement Value\u003E properties are ignored."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Evaluation Mode": {
                  "name": "Evaluation Mode",
                  "displayName": "Evaluation Mode",
                  "description": "Run the 'Replacement Strategy' against each line separately (Line-by-Line) or buffer the entire file into memory (Entire Text) and run against that.",
                  "defaultValue": "Line-by-Line",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Line-by-Line",
                        "value": "Line-by-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Entire text",
                        "value": "Entire text"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Line-by-Line Evaluation Mode": {
                  "name": "Line-by-Line Evaluation Mode",
                  "displayName": "Line-by-Line Evaluation Mode",
                  "description": "Run the 'Replacement Strategy' against each line separately (Line-by-Line) for all lines in the FlowFile, First Line (Header) alone, Last Line (Footer) alone, Except the First Line (Header) or Except the Last Line (Footer).",
                  "defaultValue": "All",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "All",
                        "value": "All"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "First-Line",
                        "value": "First-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Last-Line",
                        "value": "Last-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Except-First-Line",
                        "value": "Except-First-Line"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Except-Last-Line",
                        "value": "Except-Last-Line"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
            "name": "ReplaceText",
            "runStatus": "Running",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ReplaceText",
              "type": "ReplaceText",
              "runStatus": "Running",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "clientId": "22bb31d6-16e9-1bf8-a16b-2255b9befdc1",
            "version": 5
          },
          "id": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/22bb3129-16e9-1bf8-acf8-6d607d243c67",
          "position": {
            "x": 4176,
            "y": 496
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 4176,
              "y": 496
            },
            "name": "PublishKafka_2_0",
            "type": "org.apache.nifi.processors.kafka.pubsub.PublishKafka_2_0",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-kafka-2-0-nar",
              "version": "1.14.0"
            },
            "state": "STOPPED",
            "style": {

            },
            "relationships": [
              {
                "name": "failure",
                "description": "Any FlowFile that cannot be sent to Kafka will be routed to this Relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles for which all content was sent to Kafka.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "bootstrap.servers": "localhost:3344",
                "security.protocol": "PLAINTEXT",
                "sasl.mechanism": "GSSAPI",
                "sasl.kerberos.service.name": null,
                "kerberos-credentials-service": null,
                "sasl.kerberos.principal": null,
                "sasl.kerberos.keytab": null,
                "sasl.username": null,
                "sasl.password": null,
                "sasl.token.auth": "false",
                "ssl.context.service": null,
                "topic": "data_pushKafka6767",
                "acks": "all",
                "Failure Strategy": "Route to Failure",
                "use-transactions": "true",
                "transactional-id-prefix": null,
                "attribute-name-regex": null,
                "message-header-encoding": "UTF-8",
                "kafka-key": null,
                "key-attribute-encoding": "utf-8",
                "message-demarcator": null,
                "max.request.size": "1 MB",
                "ack.wait.time": "5 secs",
                "max.block.ms": "5 sec",
                "partitioner.class": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                "partition": null,
                "compression.type": "none"
              },
              "descriptors": {
                "bootstrap.servers": {
                  "name": "bootstrap.servers",
                  "displayName": "Kafka Brokers",
                  "description": "A comma-separated list of known Kafka Brokers in the format \u003Chost\u003E:\u003Cport\u003E",
                  "defaultValue": "localhost:9092",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "security.protocol": {
                  "name": "security.protocol",
                  "displayName": "Security Protocol",
                  "description": "Protocol used to communicate with brokers. Corresponds to Kafka's 'security.protocol' property.",
                  "defaultValue": "PLAINTEXT",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "PLAINTEXT",
                        "value": "PLAINTEXT",
                        "description": "PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SSL",
                        "value": "SSL",
                        "description": "SSL"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_PLAINTEXT",
                        "value": "SASL_PLAINTEXT",
                        "description": "SASL_PLAINTEXT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SASL_SSL",
                        "value": "SASL_SSL",
                        "description": "SASL_SSL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.mechanism": {
                  "name": "sasl.mechanism",
                  "displayName": "SASL Mechanism",
                  "description": "The SASL mechanism to use for authentication. Corresponds to Kafka's 'sasl.mechanism' property.",
                  "defaultValue": "GSSAPI",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "GSSAPI",
                        "value": "GSSAPI",
                        "description": "The mechanism for authentication via Kerberos. The principal and keytab must be provided to the processor by using a Keytab Credential service, or by specifying the properties directly in the processor."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "PLAIN",
                        "value": "PLAIN",
                        "description": "The mechanism for authentication via username and password. The username and password properties must be populated when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-256",
                        "value": "SCRAM-SHA-256",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-256. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SCRAM-SHA-512",
                        "value": "SCRAM-SHA-512",
                        "description": "The Salted Challenge Response Authentication Mechanism using SHA-512. The username and password properties must be set when using this mechanism."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "sasl.kerberos.service.name": {
                  "name": "sasl.kerberos.service.name",
                  "displayName": "Kerberos Service Name",
                  "description": "The service name that matches the primary name of the Kafka server configured in the broker JAAS file.This can be defined either in Kafka's JAAS config or in Kafka's config. Corresponds to Kafka's 'security.protocol' property.It is ignored unless one of the SASL options of the \u003CSecurity Protocol\u003E are selected.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "kerberos-credentials-service": {
                  "name": "kerberos-credentials-service",
                  "displayName": "Kerberos Credentials Service",
                  "description": "Specifies the Kerberos Credentials Controller Service that should be used for authenticating with Kerberos",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.kerberos.KerberosCredentialsService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "sasl.kerberos.principal": {
                  "name": "sasl.kerberos.principal",
                  "displayName": "Kerberos Principal",
                  "description": "The Kerberos principal that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.kerberos.keytab": {
                  "name": "sasl.kerberos.keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "The Kerberos keytab that will be used to connect to brokers. If not set, it is expected to set a JAAS configuration file in the JVM properties defined in the bootstrap.conf file. This principal will be set into 'sasl.jaas.config' Kafka's property.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.username": {
                  "name": "sasl.username",
                  "displayName": "Username",
                  "description": "The username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.password": {
                  "name": "sasl.password",
                  "displayName": "Password",
                  "description": "The password for the given username when the SASL Mechanism is PLAIN or SCRAM-SHA-256/SCRAM-SHA-512",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "sasl.token.auth": {
                  "name": "sasl.token.auth",
                  "displayName": "Token Auth",
                  "description": "When SASL Mechanism is SCRAM-SHA-256 or SCRAM-SHA-512, this property indicates if token authentication should be used.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ssl.context.service": {
                  "name": "ssl.context.service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies the SSL Context Service to use for communicating with Kafka.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService",
                  "identifiesControllerServiceBundle": {
                    "group": "org.apache.nifi",
                    "artifact": "nifi-standard-services-api-nar",
                    "version": "1.14.0"
                  },
                  "dependencies": []
                },
                "topic": {
                  "name": "topic",
                  "displayName": "Topic Name",
                  "description": "The name of the Kafka Topic to publish to.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "acks": {
                  "name": "acks",
                  "displayName": "Delivery Guarantee",
                  "description": "Specifies the requirement for guaranteeing that a message is sent to Kafka. Corresponds to Kafka's 'acks' property.",
                  "defaultValue": "0",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Best Effort",
                        "value": "0",
                        "description": "FlowFile will be routed to success after successfully writing the content to a Kafka node, without waiting for a response. This provides the best performance but may result in data loss."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Single Node Delivery",
                        "value": "1",
                        "description": "FlowFile will be routed to success if the message is received by a single Kafka node, whether or not it is replicated. This is faster than \u003CGuarantee Replicated Delivery\u003E but can result in data loss if a Kafka node crashes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Guarantee Replicated Delivery",
                        "value": "all",
                        "description": "FlowFile will be routed to failure unless the message is replicated to the appropriate number of Kafka Nodes according to the Topic configuration"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Failure Strategy": {
                  "name": "Failure Strategy",
                  "displayName": "Failure Strategy",
                  "description": "Dictates how the processor handles a FlowFile if it is unable to publish the data to Kafka",
                  "defaultValue": "Route to Failure",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Failure",
                        "value": "Route to Failure",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be routed to the 'failure' relationship."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Rollback",
                        "value": "Rollback",
                        "description": "When unable to publish a FlowFile to Kafka, the FlowFile will be placed back on the top of its queue so that it will be the next FlowFile tried again. For dataflows where ordering of FlowFiles is important, this strategy can be used along with ensuring that the each processor in the dataflow uses only a single Concurrent Task."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "use-transactions": {
                  "name": "use-transactions",
                  "displayName": "Use Transactions",
                  "description": "Specifies whether or not NiFi should provide Transactional guarantees when communicating with Kafka. If there is a problem sending data to Kafka, and this property is set to false, then the messages that have already been sent to Kafka will continue on and be delivered to consumers. If this is set to true, then the Kafka transaction will be rolled back so that those messages are not available to consumers. Setting this to true requires that the \u003CDelivery Guarantee\u003E property be set to \"Guarantee Replicated Delivery.\"",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "transactional-id-prefix": {
                  "name": "transactional-id-prefix",
                  "displayName": "Transactional Id Prefix",
                  "description": "When Use Transaction is set to true, KafkaProducer config 'transactional.id' will be a generated UUID and will be prefixed with this string.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "attribute-name-regex": {
                  "name": "attribute-name-regex",
                  "displayName": "Attributes to Send as Headers (Regex)",
                  "description": "A Regular Expression that is matched against all FlowFile attribute names. Any attribute whose name matches the regex will be added to the Kafka messages as a Header. If not specified, no FlowFile attributes will be added as headers.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-header-encoding": {
                  "name": "message-header-encoding",
                  "displayName": "Message Header Encoding",
                  "description": "For any attribute that is added as a message header, as configured via the \u003CAttributes to Send as Headers\u003E property, this property indicates the Character Encoding to use for serializing the headers.",
                  "defaultValue": "UTF-8",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "kafka-key": {
                  "name": "kafka-key",
                  "displayName": "Kafka Key",
                  "description": "The Key to use for the Message. If not specified, the flow file attribute 'kafka.key' is used as the message key, if it is present.Beware that setting Kafka key and demarcating at the same time may potentially lead to many Kafka messages with the same key.Normally this is not a problem as Kafka does not enforce or assume message and key uniqueness. Still, setting the demarcator and Kafka key at the same time poses a risk of data loss on Kafka. During a topic compaction on Kafka, messages will be deduplicated based on this key.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "key-attribute-encoding": {
                  "name": "key-attribute-encoding",
                  "displayName": "Key Attribute Encoding",
                  "description": "FlowFiles that are emitted have an attribute named 'kafka.key'. This property dictates how the value of the attribute should be encoded.",
                  "defaultValue": "utf-8",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "UTF-8 Encoded",
                        "value": "utf-8",
                        "description": "The key is interpreted as a UTF-8 Encoded string."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Hex Encoded",
                        "value": "hex",
                        "description": "The key is interpreted as arbitrary binary data that is encoded using hexadecimal characters with uppercase letters."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "message-demarcator": {
                  "name": "message-demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the string (interpreted as UTF-8) to use for demarcating multiple messages within a single FlowFile. If not specified, the entire content of the FlowFile will be used as a single message. If specified, the contents of the FlowFile will be split on this delimiter and each section sent as a separate Kafka message. To enter special character such as 'new line' use CTRL+Enter or Shift+Enter, depending on your OS.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "max.request.size": {
                  "name": "max.request.size",
                  "displayName": "Max Request Size",
                  "description": "The maximum size of a request in bytes. Corresponds to Kafka's 'max.request.size' property and defaults to 1 MB (1048576).",
                  "defaultValue": "1 MB",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "ack.wait.time": {
                  "name": "ack.wait.time",
                  "displayName": "Acknowledgment Wait Time",
                  "description": "After sending a message to Kafka, this indicates the amount of time that we are willing to wait for a response from Kafka. If Kafka does not acknowledge the message within this time period, the FlowFile will be routed to 'failure'.",
                  "defaultValue": "5 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "max.block.ms": {
                  "name": "max.block.ms",
                  "displayName": "Max Metadata Wait Time",
                  "description": "The amount of time publisher will wait to obtain metadata or wait for the buffer to flush during the 'send' call before failing the entire 'send' call. Corresponds to Kafka's 'max.block.ms' property",
                  "defaultValue": "5 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "partitioner.class": {
                  "name": "partitioner.class",
                  "displayName": "Partitioner class",
                  "description": "Specifies which class to use to compute a partition id for a message. Corresponds to Kafka's 'partitioner.class' property.",
                  "defaultValue": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "RoundRobinPartitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$RoundRobinPartitioner",
                        "description": "Messages will be assigned partitions in a round-robin fashion, sending the first message to Partition 1, the next Partition to Partition 2, and so on, wrapping as necessary."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DefaultPartitioner",
                        "value": "org.apache.kafka.clients.producer.internals.DefaultPartitioner",
                        "description": "Messages will be assigned to random partitions."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Expression Language Partitioner",
                        "value": "org.apache.nifi.processors.kafka.pubsub.Partitioners$ExpressionLanguagePartitioner",
                        "description": "Interprets the \u003CPartition\u003E property as Expression Language that will be evaluated against each FlowFile. This Expression will be evaluated once against the FlowFile, so all Records in a given FlowFile will go to the same partition."
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "partition": {
                  "name": "partition",
                  "displayName": "Partition",
                  "description": "Specifies which Partition Records will go to.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry and FlowFile Attributes",
                  "dependencies": []
                },
                "compression.type": {
                  "name": "compression.type",
                  "displayName": "Compression Type",
                  "description": "This parameter allows you to specify the compression codec for all data generated by this producer.",
                  "defaultValue": "none",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "none",
                        "value": "none"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "gzip",
                        "value": "gzip"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "snappy",
                        "value": "snappy"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "lz4",
                        "value": "lz4"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
            "name": "PublishKafka_2_0",
            "runStatus": "Stopped",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "type": "PublishKafka_2_0",
              "runStatus": "Stopped",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        },
        {
          "revision": {
            "clientId": "22bb31d6-16e9-1bf8-a16b-2255b9befdc1",
            "version": 3
          },
          "id": "9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
          "uri": "http://127.0.0.1:52502/nifi-api/processors/9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
          "position": {
            "x": 2944,
            "y": 424
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 2944,
              "y": 424
            },
            "name": "GenerateFlowFile",
            "type": "org.apache.nifi.processors.standard.GenerateFlowFile",
            "bundle": {
              "group": "org.apache.nifi",
              "artifact": "nifi-standard-nar",
              "version": "1.14.0"
            },
            "state": "STOPPED",
            "style": {

            },
            "relationships": [
              {
                "name": "success",
                "description": "",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "deprecated": false,
            "executionNodeRestricted": false,
            "multipleVersionsAvailable": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "File Size": "0B",
                "Batch Size": "1",
                "Data Format": "Text",
                "Unique FlowFiles": "false",
                "generate-ff-custom-text": "{ \"data\" : \"1\" }",
                "character-set": "UTF-8",
                "mime-type": null
              },
              "descriptors": {
                "File Size": {
                  "name": "File Size",
                  "displayName": "File Size",
                  "description": "The size of the file that will be used",
                  "defaultValue": "0B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "The number of FlowFiles to be transferred in each invocation",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Data Format": {
                  "name": "Data Format",
                  "displayName": "Data Format",
                  "description": "Specifies whether the data should be Text or Binary",
                  "defaultValue": "Text",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Binary",
                        "value": "Binary"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "Unique FlowFiles": {
                  "name": "Unique FlowFiles",
                  "displayName": "Unique FlowFiles",
                  "description": "If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "generate-ff-custom-text": {
                  "name": "generate-ff-custom-text",
                  "displayName": "Custom Text",
                  "description": "If Data Format is text and if Unique FlowFiles is false, then this custom text will be used as content of the generated FlowFiles and the File Size will be ignored. Finally, if Expression Language is used, evaluation will be performed only once per batch of generated FlowFiles",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true,
                  "expressionLanguageScope": "Variable Registry Only",
                  "dependencies": []
                },
                "character-set": {
                  "name": "character-set",
                  "displayName": "Character Set",
                  "description": "Specifies the character set to use when writing the bytes of Custom Text to a flow file.",
                  "defaultValue": "UTF-8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                },
                "mime-type": {
                  "name": "mime-type",
                  "displayName": "Mime Type",
                  "description": "Specifies the value to set for the \"mime.type\" attribute.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "expressionLanguageScope": "Not Supported",
                  "dependencies": []
                }
              },
              "schedulingPeriod": "82 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [],
            "validationStatus": "VALID",
            "extensionMissing": false
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "id": "9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
            "name": "GenerateFlowFile",
            "runStatus": "Stopped",
            "statsLastRefreshed": "13:20:39 UTC",
            "aggregateSnapshot": {
              "id": "9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "type": "GenerateFlowFile",
              "runStatus": "Stopped",
              "executionNode": "ALL",
              "bytesRead": 0,
              "bytesWritten": 64,
              "read": "0 bytes",
              "written": "64 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 4,
              "bytesOut": 64,
              "output": "4 (64 bytes)",
              "taskCount": 4,
              "tasksDurationNanos": 6534502,
              "tasks": "4",
              "tasksDuration": "00:00:00.006",
              "activeThreadCount": 0,
              "terminatedThreadCount": 0
            }
          },
          "operatePermissions": {
            "canRead": true,
            "canWrite": true
          }
        }
      ],
      "inputPorts": [],
      "outputPorts": [],
      "connections": [
        {
          "revision": {
            "version": 0
          },
          "id": "d9245028-7a53-3976-82a2-2cf48dbd52f0",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/d9245028-7a53-3976-82a2-2cf48dbd52f0",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d9245028-7a53-3976-82a2-2cf48dbd52f0",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpRequest",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ReplaceText",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "d9245028-7a53-3976-82a2-2cf48dbd52f0",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
            "sourceName": "HandleHttpRequest",
            "destinationId": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
            "destinationName": "ReplaceText",
            "aggregateSnapshot": {
              "id": "d9245028-7a53-3976-82a2-2cf48dbd52f0",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "HandleHttpRequest",
              "destinationName": "ReplaceText",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "39acafc5-efd6-38ec-a3b5-11b56ca7aba1",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/39acafc5-efd6-38ec-a3b5-11b56ca7aba1",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "39acafc5-efd6-38ec-a3b5-11b56ca7aba1",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "Response"
            ],
            "availableRelationships": [
              "Failure",
              "No Retry",
              "Original",
              "Response",
              "Retry"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "39acafc5-efd6-38ec-a3b5-11b56ca7aba1",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "Response",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
            "sourceName": "InvokeHTTP",
            "destinationId": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "39acafc5-efd6-38ec-a3b5-11b56ca7aba1",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Response",
              "sourceName": "InvokeHTTP",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "93fe0067-8ff9-3df7-ad5c-4427041ea3a7",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/93fe0067-8ff9-3df7-ad5c-4427041ea3a7",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "93fe0067-8ff9-3df7-ad5c-4427041ea3a7",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "a9cd91d1-db01-34bd-a27f-6398c004caa9",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ConsumeKafka_2_0",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "0a35183a-6783-368d-8bd2-01a32632e200",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "93fe0067-8ff9-3df7-ad5c-4427041ea3a7",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "a9cd91d1-db01-34bd-a27f-6398c004caa9",
            "sourceName": "ConsumeKafka_2_0",
            "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "93fe0067-8ff9-3df7-ad5c-4427041ea3a7",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "ConsumeKafka_2_0",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "a9cd91d1-db01-34bd-a27f-6398c004caa9",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "19d0f1bc-888a-33b6-a048-831194a1dd07",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/19d0f1bc-888a-33b6-a048-831194a1dd07",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "19d0f1bc-888a-33b6-a048-831194a1dd07",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "Response"
            ],
            "availableRelationships": [
              "Failure",
              "No Retry",
              "Original",
              "Response",
              "Retry"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "19d0f1bc-888a-33b6-a048-831194a1dd07",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "Response",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
            "sourceName": "InvokeHTTP",
            "destinationId": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "19d0f1bc-888a-33b6-a048-831194a1dd07",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Response",
              "sourceName": "InvokeHTTP",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "clientId": "262c55e8-0197-1000-27ed-f5ef1da83230",
            "version": 1
          },
          "id": "263a5da6-0197-1000-0000-000062775ee5",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/263a5da6-0197-1000-0000-000062775ee5",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "263a5da6-0197-1000-0000-000062775ee5",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "0a35183a-6783-368d-8bd2-01a32632e200",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "263a5da6-0197-1000-0000-000062775ee5",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
            "sourceName": "PublishKafka_2_0",
            "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "263a5da6-0197-1000-0000-000062775ee5",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "PublishKafka_2_0",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "4e616c6f-b0f0-30cf-873a-e664ef7bb9e4",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/4e616c6f-b0f0-30cf-873a-e664ef7bb9e4",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "4e616c6f-b0f0-30cf-873a-e664ef7bb9e4",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpRequest",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ReplaceText",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "4e616c6f-b0f0-30cf-873a-e664ef7bb9e4",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
            "sourceName": "HandleHttpRequest",
            "destinationId": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
            "destinationName": "ReplaceText",
            "aggregateSnapshot": {
              "id": "4e616c6f-b0f0-30cf-873a-e664ef7bb9e4",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "HandleHttpRequest",
              "destinationName": "ReplaceText",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "2d8cce7a-3654-3401-8f1f-8fd1ae051298",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "83429283-9868-3aff-ba57-e12d063ef40f",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/83429283-9868-3aff-ba57-e12d063ef40f",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "83429283-9868-3aff-ba57-e12d063ef40f",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "ce050034-b52d-3eca-b55c-dfda8780bac0",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "83429283-9868-3aff-ba57-e12d063ef40f",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "ce050034-b52d-3eca-b55c-dfda8780bac0",
            "sourceName": "GenerateFlowFile",
            "destinationId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
            "destinationName": "PublishKafka_2_0",
            "aggregateSnapshot": {
              "id": "83429283-9868-3aff-ba57-e12d063ef40f",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "GenerateFlowFile",
              "destinationName": "PublishKafka_2_0",
              "predictions": {
                "predictedMillisUntilCountBackpressure": 768747594,
                "predictedMillisUntilBytesBackpressure": 4833169145909,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": 67,
                "predictedBytesAtNextInterval": 1077,
                "predictedPercentCount": 1,
                "predictedPercentBytes": 0
              },
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 65,
              "bytesQueued": 1040,
              "queued": "65 (1.02 KB)",
              "queuedSize": "1.02 KB",
              "queuedCount": "65",
              "percentUseCount": 1,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ce050034-b52d-3eca-b55c-dfda8780bac0",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "59de80a2-44cd-3987-91a1-f449cf787ba8",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/59de80a2-44cd-3987-91a1-f449cf787ba8",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "59de80a2-44cd-3987-91a1-f449cf787ba8",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpResponse",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "59de80a2-44cd-3987-91a1-f449cf787ba8",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
            "sourceName": "HandleHttpResponse",
            "destinationId": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "59de80a2-44cd-3987-91a1-f449cf787ba8",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "HandleHttpResponse",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "0a18c12a-9f6e-3a16-82d6-45adae897649",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/0a18c12a-9f6e-3a16-82d6-45adae897649",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "0a18c12a-9f6e-3a16-82d6-45adae897649",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "0c7d5995-e10a-36be-81ff-a4164400ece9",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpResponse",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "0a18c12a-9f6e-3a16-82d6-45adae897649",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "0c7d5995-e10a-36be-81ff-a4164400ece9",
            "sourceName": "HandleHttpResponse",
            "destinationId": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "0a18c12a-9f6e-3a16-82d6-45adae897649",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "HandleHttpResponse",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "0c7d5995-e10a-36be-81ff-a4164400ece9",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "3cc48331-406c-3e32-9bfa-a41df8c2a89c",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/3cc48331-406c-3e32-9bfa-a41df8c2a89c",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "3cc48331-406c-3e32-9bfa-a41df8c2a89c",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "cdff1010-aa55-3784-9422-f88c010eace5",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "Failure",
              "No Retry",
              "Retry"
            ],
            "availableRelationships": [
              "Failure",
              "No Retry",
              "Original",
              "Response",
              "Retry"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "3cc48331-406c-3e32-9bfa-a41df8c2a89c",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "No Retry, Retry, Failure",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
            "sourceName": "InvokeHTTP",
            "destinationId": "cdff1010-aa55-3784-9422-f88c010eace5",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "3cc48331-406c-3e32-9bfa-a41df8c2a89c",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "No Retry, Retry, Failure",
              "sourceName": "InvokeHTTP",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": 802189702,
                "predictedMillisUntilBytesBackpressure": 4909051973739,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": 67,
                "predictedBytesAtNextInterval": 1082,
                "predictedPercentCount": 1,
                "predictedPercentBytes": 0
              },
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 65,
              "bytesQueued": 1040,
              "queued": "65 (1.02 KB)",
              "queuedSize": "1.02 KB",
              "queuedCount": "65",
              "percentUseCount": 1,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ec28c6af-9cce-3211-8215-1877de1ada68",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "cdff1010-aa55-3784-9422-f88c010eace5",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "clientId": "262c55e8-0197-1000-27ed-f5ef1da83230",
            "version": 1
          },
          "id": "22bb312c-16e9-1bf8-ffff-ffffddbddff4",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/22bb312c-16e9-1bf8-ffff-ffffddbddff4",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "22bb312c-16e9-1bf8-ffff-ffffddbddff4",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "05ab37f3-ed4b-178b-abe7-2838a09d1479",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "22bb312c-16e9-1bf8-ffff-ffffddbddff4",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "05ab37f3-ed4b-178b-abe7-2838a09d1479",
            "sourceName": "GenerateFlowFile",
            "destinationId": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
            "destinationName": "PublishKafka_2_0",
            "aggregateSnapshot": {
              "id": "22bb312c-16e9-1bf8-ffff-ffffddbddff4",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "GenerateFlowFile",
              "destinationName": "PublishKafka_2_0",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 5,
              "bytesQueued": 80,
              "queued": "5 (80 bytes)",
              "queuedSize": "80 bytes",
              "queuedCount": "5",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "05ab37f3-ed4b-178b-abe7-2838a09d1479",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "01a1f6a9-c598-3272-8261-d87b362437c5",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/01a1f6a9-c598-3272-8261-d87b362437c5",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "01a1f6a9-c598-3272-8261-d87b362437c5",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ec28c6af-9cce-3211-8215-1877de1ada68",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "01a1f6a9-c598-3272-8261-d87b362437c5",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
            "sourceName": "GenerateFlowFile",
            "destinationId": "ec28c6af-9cce-3211-8215-1877de1ada68",
            "destinationName": "InvokeHTTP",
            "aggregateSnapshot": {
              "id": "01a1f6a9-c598-3272-8261-d87b362437c5",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "GenerateFlowFile",
              "destinationName": "InvokeHTTP",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": 0,
                "predictedBytesAtNextInterval": 0,
                "predictedPercentCount": 0,
                "predictedPercentBytes": 0
              },
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 4,
              "bytesOut": 64,
              "output": "4 (64 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "ec28c6af-9cce-3211-8215-1877de1ada68",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "43570cfa-cee3-379e-929f-4634fc41a5f0",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/43570cfa-cee3-379e-929f-4634fc41a5f0",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "43570cfa-cee3-379e-929f-4634fc41a5f0",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "36ef3285-daf0-304b-b60e-189446e591e5",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ConsumeKafka_2_0",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "0a35183a-6783-368d-8bd2-01a32632e200",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "43570cfa-cee3-379e-929f-4634fc41a5f0",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "36ef3285-daf0-304b-b60e-189446e591e5",
            "sourceName": "ConsumeKafka_2_0",
            "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "43570cfa-cee3-379e-929f-4634fc41a5f0",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "ConsumeKafka_2_0",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "36ef3285-daf0-304b-b60e-189446e591e5",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "e3e551cd-e32c-3579-bfe8-f41f126d0de3",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/e3e551cd-e32c-3579-bfe8-f41f126d0de3",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e3e551cd-e32c-3579-bfe8-f41f126d0de3",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "9965caa6-5137-38d5-b223-4d2f90a074b8",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "Failure",
              "No Retry",
              "Retry"
            ],
            "availableRelationships": [
              "Failure",
              "No Retry",
              "Original",
              "Response",
              "Retry"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "e3e551cd-e32c-3579-bfe8-f41f126d0de3",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "No Retry, Retry, Failure",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
            "sourceName": "InvokeHTTP",
            "destinationId": "9965caa6-5137-38d5-b223-4d2f90a074b8",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "e3e551cd-e32c-3579-bfe8-f41f126d0de3",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "No Retry, Retry, Failure",
              "sourceName": "InvokeHTTP",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": 779466712,
                "predictedMillisUntilBytesBackpressure": 4767679224395,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": 67,
                "predictedBytesAtNextInterval": 1078,
                "predictedPercentCount": 1,
                "predictedPercentBytes": 0
              },
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 65,
              "bytesQueued": 1040,
              "queued": "65 (1.02 KB)",
              "queuedSize": "1.02 KB",
              "queuedCount": "65",
              "percentUseCount": 1,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "9965caa6-5137-38d5-b223-4d2f90a074b8",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "b2108dbb-da19-32e2-9f30-91a777fd4d4a",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/b2108dbb-da19-32e2-9f30-91a777fd4d4a",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b2108dbb-da19-32e2-9f30-91a777fd4d4a",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ReplaceText",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "0c7d5995-e10a-36be-81ff-a4164400ece9",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpResponse",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "b2108dbb-da19-32e2-9f30-91a777fd4d4a",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
            "sourceName": "ReplaceText",
            "destinationId": "0c7d5995-e10a-36be-81ff-a4164400ece9",
            "destinationName": "HandleHttpResponse",
            "aggregateSnapshot": {
              "id": "b2108dbb-da19-32e2-9f30-91a777fd4d4a",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "ReplaceText",
              "destinationName": "HandleHttpResponse",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "cd7165f5-d923-31a6-95c3-89d87fa09d3f",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "0c7d5995-e10a-36be-81ff-a4164400ece9",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "9f6bfefe-7fd5-3659-996d-e67b31e7429b",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/9f6bfefe-7fd5-3659-996d-e67b31e7429b",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "9f6bfefe-7fd5-3659-996d-e67b31e7429b",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "f6a68058-0ed8-3432-9d16-883c485c1b32",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "0a35183a-6783-368d-8bd2-01a32632e200",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "9f6bfefe-7fd5-3659-996d-e67b31e7429b",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
            "sourceName": "PublishKafka_2_0",
            "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "9f6bfefe-7fd5-3659-996d-e67b31e7429b",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "PublishKafka_2_0",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f6a68058-0ed8-3432-9d16-883c485c1b32",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "clientId": "262c55e8-0197-1000-27ed-f5ef1da83230",
            "version": 1
          },
          "id": "22bb3150-16e9-1bf8-ffff-ffff80966f6a",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/22bb3150-16e9-1bf8-ffff-ffff80966f6a",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "22bb3150-16e9-1bf8-ffff-ffff80966f6a",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "0a35183a-6783-368d-8bd2-01a32632e200",
              "type": "FUNNEL",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "Funnel",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "22bb3150-16e9-1bf8-ffff-ffff80966f6a",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
            "sourceName": "PublishKafka_2_0",
            "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
            "destinationName": "Funnel",
            "aggregateSnapshot": {
              "id": "22bb3150-16e9-1bf8-ffff-ffff80966f6a",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "PublishKafka_2_0",
              "destinationName": "Funnel",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "22bb3129-16e9-1bf8-acf8-6d607d243c67",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "0a35183a-6783-368d-8bd2-01a32632e200",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "FUNNEL"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "537ebb9b-83d8-3f1b-afc5-6d10d881eb54",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/537ebb9b-83d8-3f1b-afc5-6d10d881eb54",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "537ebb9b-83d8-3f1b-afc5-6d10d881eb54",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "bcb04da3-1daf-322d-b444-2dbb925302eb",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "InvokeHTTP",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "537ebb9b-83d8-3f1b-afc5-6d10d881eb54",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
            "sourceName": "GenerateFlowFile",
            "destinationId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
            "destinationName": "InvokeHTTP",
            "aggregateSnapshot": {
              "id": "537ebb9b-83d8-3f1b-afc5-6d10d881eb54",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "GenerateFlowFile",
              "destinationName": "InvokeHTTP",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": 0,
                "predictedBytesAtNextInterval": 0,
                "predictedPercentCount": 0,
                "predictedPercentBytes": 0
              },
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 4,
              "bytesOut": 64,
              "output": "4 (64 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "682d01b0-dffa-3d69-8416-c922cea0b5eb",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "bcb04da3-1daf-322d-b444-2dbb925302eb",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "191133d2-bb41-31cb-a787-476d453d71b7",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/191133d2-bb41-31cb-a787-476d453d71b7",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "191133d2-bb41-31cb-a787-476d453d71b7",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "ReplaceText",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "HandleHttpResponse",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "191133d2-bb41-31cb-a787-476d453d71b7",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
            "sourceName": "ReplaceText",
            "destinationId": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
            "destinationName": "HandleHttpResponse",
            "aggregateSnapshot": {
              "id": "191133d2-bb41-31cb-a787-476d453d71b7",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "ReplaceText",
              "destinationName": "HandleHttpResponse",
              "predictions": {
                "predictedMillisUntilCountBackpressure": -1,
                "predictedMillisUntilBytesBackpressure": -1,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": -1,
                "predictedBytesAtNextInterval": -1,
                "predictedPercentCount": -1,
                "predictedPercentBytes": -1
              },
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "d9ebdb2a-1666-3fbb-b677-9f533b6b9bb9",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "38e55457-49d1-31c8-a88b-0b7247fbeb7e",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "262c55e8-0197-1000-27ed-f5ef1da83230",
            "version": 1
          },
          "id": "263a4d86-0197-1000-ffff-ffffdc4f14ef",
          "uri": "http://127.0.0.1:52502/nifi-api/connections/263a4d86-0197-1000-ffff-ffffdc4f14ef",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "263a4d86-0197-1000-ffff-ffffdc4f14ef",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "source": {
              "id": "9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "GenerateFlowFile",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
              "type": "PROCESSOR",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "PublishKafka_2_0",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [],
            "loadBalanceStrategy": "DO_NOT_LOAD_BALANCE",
            "loadBalancePartitionAttribute": "",
            "loadBalanceCompression": "DO_NOT_COMPRESS",
            "loadBalanceStatus": "LOAD_BALANCE_NOT_CONFIGURED"
          },
          "status": {
            "id": "263a4d86-0197-1000-ffff-ffffdc4f14ef",
            "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "name": "success",
            "statsLastRefreshed": "13:20:39 UTC",
            "sourceId": "9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
            "sourceName": "GenerateFlowFile",
            "destinationId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
            "destinationName": "PublishKafka_2_0",
            "aggregateSnapshot": {
              "id": "263a4d86-0197-1000-ffff-ffffdc4f14ef",
              "groupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
              "name": "success",
              "sourceName": "GenerateFlowFile",
              "destinationName": "PublishKafka_2_0",
              "predictions": {
                "predictedMillisUntilCountBackpressure": 1017580207,
                "predictedMillisUntilBytesBackpressure": 4788368373035,
                "predictionIntervalSeconds": 180,
                "predictedCountAtNextInterval": 58,
                "predictedBytesAtNextInterval": 942,
                "predictedPercentCount": 1,
                "predictedPercentBytes": 0
              },
              "flowFilesIn": 4,
              "bytesIn": 64,
              "input": "4 (64 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 56,
              "bytesQueued": 896,
              "queued": "56 (896 bytes)",
              "queuedSize": "896 bytes",
              "queuedCount": "56",
              "percentUseCount": 1,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "9b3930af-ec99-1a10-bfbe-82f8e6b6f804",
          "sourceGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "sourceType": "PROCESSOR",
          "destinationId": "879c332d-b73c-1bc6-8e40-d8b9ff1d4bf3",
          "destinationGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
          "destinationType": "PROCESSOR"
        }
      ],
      "labels": [],
      "funnels": [
        {
          "revision": {
            "version": 0
          },
          "id": "9965caa6-5137-38d5-b223-4d2f90a074b8",
          "uri": "http://127.0.0.1:52502/nifi-api/funnels/9965caa6-5137-38d5-b223-4d2f90a074b8",
          "position": {
            "x": 2896,
            "y": 224
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "9965caa6-5137-38d5-b223-4d2f90a074b8",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 2896,
              "y": 224
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
          "uri": "http://127.0.0.1:52502/nifi-api/funnels/b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
          "position": {
            "x": 773.815117484087,
            "y": 828.405784979891
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b772c83a-d346-3dcb-83d9-f65fd0a9e84b",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 773.815117484087,
              "y": 828.405784979891
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
          "uri": "http://127.0.0.1:52502/nifi-api/funnels/a00afcd3-1132-39e8-87d6-3ff069f7c18a",
          "position": {
            "x": 1904,
            "y": 504
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a00afcd3-1132-39e8-87d6-3ff069f7c18a",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 1904,
              "y": 504
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "cdff1010-aa55-3784-9422-f88c010eace5",
          "uri": "http://127.0.0.1:52502/nifi-api/funnels/cdff1010-aa55-3784-9422-f88c010eace5",
          "position": {
            "x": 1416,
            "y": 232
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "cdff1010-aa55-3784-9422-f88c010eace5",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 1416,
              "y": 232
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "0a35183a-6783-368d-8bd2-01a32632e200",
          "uri": "http://127.0.0.1:52502/nifi-api/funnels/0a35183a-6783-368d-8bd2-01a32632e200",
          "position": {
            "x": 3887.46746501182,
            "y": 296.618224628919
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "0a35183a-6783-368d-8bd2-01a32632e200",
            "parentGroupId": "ddcb79b2-d5b3-3a72-b56b-0182d5c723a2",
            "position": {
              "x": 3887.46746501182,
              "y": 296.618224628919
            }
          }
        }
      ]
    },
    "lastRefreshed": "13:20:39 UTC"
  }
}com